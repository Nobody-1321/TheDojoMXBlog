<!doctype html>
<!--
  Minimal Mistakes Jekyll Theme 4.20.1 by Michael Rose
  Copyright 2013-2019 Michael Rose - mademistakes.com | @mmistakes
  Free for personal and commercial use under the MIT license
  https://github.com/mmistakes/minimal-mistakes/blob/master/LICENSE
-->
<html lang="es" class="no-js">
  <head>
    <meta charset="utf-8">

<!-- begin _includes/seo.html --><title></title>
<meta name="description" content="">


  <meta name="author" content="Héctor Patricio">


<meta property="og:type" content="website">
<meta property="og:locale" content="es">
<meta property="og:site_name" content="">
<meta property="og:title" content="">
<meta property="og:url" content="https://blog.thedojo.mx/feed.json">













<link rel="canonical" href="https://blog.thedojo.mx/feed.json">




<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    
      "@type": "Person",
      "name": null,
      "url": "https://blog.thedojo.mx/"
    
  }
</script>






<!-- end _includes/seo.html -->


<link href="/feed.xml" type="application/atom+xml" rel="alternate" title=" Feed">

<!-- https://t.co/dKP3o1e -->
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<script>
  document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/g, '') + ' js ';
</script>

<!-- For all browsers -->
<link rel="stylesheet" href="/assets/css/main.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5/css/all.min.css">

<!--[if IE]>
  <style>
    /* old IE unsupported flexbox fixes */
    .greedy-nav .site-title {
      padding-right: 3em;
    }
    .greedy-nav button {
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
    }
  </style>
<![endif]-->



    
<!-- favicon -->
<link rel="apple-touch-icon" sizes="180x180" href="/assets/images/favicons/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/assets/images/favicons/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/assets/images/favicons/favicon-16x16.png">
<link rel="manifest" href="/assets/images/favicons/site.webmanifest">
<link rel="mask-icon" href="/assets/images/favicons/safari-pinned-tab.svg" color="#5bbad5">
<link rel="shortcut icon" href="/assets/images/favicons/favicon.ico">
<meta name="msapplication-TileColor" content="#da532c">
<meta name="msapplication-config" content="/assets/images/favicons/browserconfig.xml">
<meta name="theme-color" content="#ffffff">
<!-- end favicon -->


<!-- Hotjar Tracking Code for blog.thedojo.mx -->
<script>
    (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:1217463,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
    })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
</script>

<script src="/assets/js/sharect.min.js"></script>

<script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "url": "https://blog.thedojo.mx/feed.json",
      "name": null,
      "headline": null,
      "keywords": "",
      "description": "",
      "articleBody": "{\n  \"version\": \"https://jsonfeed.org/version/1\",\n  \"title\": {{ site.title | jsonify }},\n  \"description\": {% if site.description %}{{ site.description | jsonify }}{% endif %},\n  \"home_page_url\": \"{{ site.url }}\",\n  \"feed_url\": \"{{ site.url }}/feed.json\",\n  \"favicon\": \"{{ site.url}}/favicon.png\",\n  {% if site.author %}\n  \"author\": {\n    \"name\": {{ site.author | jsonify }}\n  },\n  {% endif %}\n  \"items\": [\n    \n    {% for post in site.posts limit:10 %}\n    {\n      \"id\": \"{{ post.url | prepend: site.baseurl | prepend: site.url }}\",\n      \"url\": \"{{ post.url | prepend: site.baseurl | prepend: site.url }}\",\n      \"title\": {{ post.title | jsonify }},\n      \"content_html\": {{ post.content | jsonify  }},\n      \"date_published\": \"{{ post.date | date_to_rfc822 }}\"\n      }{% unless forloop.last %},{% endunless %}\n    {% endfor %}\n  ]\n}",
      "datePublished": null,
      "dateModified": null,
      "author": {
        "@type": "Person",
        "name": null,
        "givenName": null,
        "email": null
      },
      "publisher": {
        "@type": "Organization",
        "name": null,
        "url": "https://blog.thedojo.mx",
        "logo": {
          "@type": "ImageObject",
          "width": 32,
          "height": 32,
          "url": "https://blog.thedojo.mx/icon/favicon.ico"
        }
      },
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://blog.thedojo.mx/feed.json"
      },
      "image": {
        "@type": "ImageObject",
        "width": 1200,
        "height": 400,
        "url": ""
      }
    }
</script>
  </head>

  <body class="layout--single">
    <nav class="skip-links">
  <h2 class="screen-reader-text">Skip links</h2>
  <ul>
    <li><a href="#site-nav" class="screen-reader-shortcut">Skip to primary navigation</a></li>
    <li><a href="#main" class="screen-reader-shortcut">Skip to content</a></li>
    <li><a href="#footer" class="screen-reader-shortcut">Skip to footer</a></li>
  </ul>
</nav>

    <!--[if lt IE 9]>
<div class="notice--danger align-center" style="margin: 0;">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience.</div>
<![endif]-->

    

<div class="masthead">
  <div class="masthead__inner-wrap">
    <div class="masthead__menu">
      <nav id="site-nav" class="greedy-nav">
        
          <a class="site-logo" href="/"><img src="https://res.cloudinary.com/hectorip/image/upload/v1554098427/TheDojo/the-dojo-transparent.png" alt=""></a>
        
        <a class="site-title" href="/">
          The Dojo Blog
          
        </a>
        <ul class="visible-links"><li class="masthead__menu-item">
              <a href="/latest">Todos los posts</a>
            </li><li class="masthead__menu-item">
              <a href="/about">Acerca de</a>
            </li><li class="masthead__menu-item">
              <a href="https://thedojo.mx">Cursos</a>
            </li></ul>
        
        <button class="search__toggle" type="button">
          <span class="visually-hidden">Toggle search</span>
          <svg class="icon" width="16" height="16" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.99 16">
            <path d="M15.5,13.12L13.19,10.8a1.69,1.69,0,0,0-1.28-.55l-0.06-.06A6.5,6.5,0,0,0,5.77,0,6.5,6.5,0,0,0,2.46,11.59a6.47,6.47,0,0,0,7.74.26l0.05,0.05a1.65,1.65,0,0,0,.5,1.24l2.38,2.38A1.68,1.68,0,0,0,15.5,13.12ZM6.4,2A4.41,4.41,0,1,1,2,6.4,4.43,4.43,0,0,1,6.4,2Z" transform="translate(-.01)"></path>
          </svg>
        </button>
        
        <button class="greedy-nav__toggle hidden" type="button">
          <span class="visually-hidden">Toggle menu</span>
          <div class="navicon"></div>
        </button>
        <ul class="hidden-links hidden"></ul>
      </nav>
    </div>
  </div>
</div>


    <div class="initial-content">
      



<div id="main" role="main">
  


  <article class="page" itemscope itemtype="https://schema.org/CreativeWork">
    
    
    
    

    <div class="page__inner-wrap">
      
        <header>
          
          


        </header>
      

      <section class="page__content" itemprop="text">
        
        {
  "version": "https://jsonfeed.org/version/1",
  "title": null,
  "description": ,
  "home_page_url": "https://blog.thedojo.mx",
  "feed_url": "https://blog.thedojo.mx/feed.json",
  "favicon": "https://blog.thedojo.mx/favicon.png",
  
  "author": {
    "name": {"name":"Héctor Patricio","avatar":"/assets/images/me.jpg","bio":"Desarrollador de software, tech lead @ HAL y The Dojo MX","uri":"https://github.com/hectorip","home":null}
  },
  
  "items": [
    
    
    {
      "id": "https://blog.thedojo.mx/2020/12/30/deberias-comentar-tu-codigo.html",
      "url": "https://blog.thedojo.mx/2020/12/30/deberias-comentar-tu-codigo.html",
      "title": "¿Deberías comentar tu código?",
      "content_html": "<p>Cuando hablamos de los comentarios en el código, hay dos escuelas. La primera dice que debes usar los comentarios para <strong>clarificar lo que quisiste expresar con tu código</strong>, mientras que la segunda dice que deberías <strong>evitarlos al máximo</strong> y que comentar tu código es un mal necesario que sólo denota tu falta de habilidad para no hacer código lo suficientemente claro.</p>\n\n<p>¿A cuál de los dos consejos deberías hacerle caso? En este artículo explicaremos por qué creemos que deberías ver los comentarios como una <strong>herramienta necesaria</strong>, valiosa y muy útil, y cómo usarlos para no caer en el extremo que ha llevado a algunas personas a tener una mala actitud hacia ellos.</p>\n\n<h2 id=\"un-sistema-sin-documentación-esta-incompleto\">Un sistema sin documentación esta incompleto</h2>\n\n<p>Como desarrollador estarás de acuerdo en que un sistema <strong>no</strong> tiene la <em>calidad suficiente</em> si no cuenta con documentación, es decir, información acerca del sistema que comunique cosas como la razón de existir de ciertos módulos, valores y funciones y cómo usarlos.</p>\n\n<p>Si, además, tienes que modificar este sistema, será una pesadilla entender todo lo que los programadores anteriores hicieron o <em>intentaron</em> hacer. Si tienes que <em>usar</em> algo sin documentación, es el mismo caso: <strong>tienes estudiar el código para saber como funciona.</strong></p>\n\n<p>Así que hemos establecido que la documentación es completamente necesaria para crear programas útiles. Ahora bien, ¿dónde ponemos esa documentación? Muchos desarrolladores y equipos no tienen idea de dónde ponerla y crean documentos que dejan después olvidados en una carpeta en la nube y que nadie encuentra después. Pero, ¿no sería más lógico mantener la documentación lo <strong>más cerca posible del código</strong>? Eso es precisamente lo que los comentarios te permiten hacer.</p>\n\n<p>Puedes usar los comentarios documentar:</p>\n\n<ul>\n  <li>Decisiones de diseño</li>\n  <li>Explicaciones sobre la existencia, funcionamiento o razón de ser de cierta parte del código</li>\n  <li>Las interfaces y su ejemplo de uso</li>\n  <li>Efectos de usar cierto código</li>\n  <li>Partes inconclusas o que se pueden mejorar (TODO’s)</li>\n</ul>\n\n<p>Tener esta información muy cerca del código sobre el que está proporcionando información ayudará a que sea fácil de encontrar y además, si se establecen reglas como tratar los comentarios como ciudadanos de primer rango, se mantendrá actualizado y útil.</p>\n\n<p>También es buena idea tener un documento o sitio web especializado en documentación que te ayude a encontrar rápido lo que buscas como Docusaurus o un sitio generado por Sophinx. Puedes utilizar esta misma documentación que escribiste junto al código si usaste el estilo definido por el lenguaje de programación o por las herramientas de generación de documentos.</p>\n\n<h3 id=\"los-comentarios-te-pueden-ayudar-en-el-futuro\">Los comentarios te pueden ayudar en el futuro</h3>\n\n<p>Incluso aunque no los uses formalmente como documentación, los comentarios estarán ahí para darte información y recordarte lo que hiciste, pero sobre todo <strong>por qué</strong> lo hiciste.</p>\n\n<p>Recuerda que la mente humana busca la eficiencia máxima de recursos, por lo que es probable que elimine información que no ocupe inmediatamente y que no recuerdas a menudo, como por qué esa variable tenía el valor 730 y no otro.</p>\n\n<p>Tu yo futuro y tu equipo te agradecerán haber escrito esos comentarios que te informan sobre lo que estabas pensando en el momento que escribiste ese código.</p>\n\n<h3 id=\"los-comentarios-son-una-buena-herramienta-de-diseño\">Los comentarios son una buena herramienta de diseño</h3>\n\n<p>John Ousterhout, en “A Philosophy of Software Design” recomienda <strong>empezar</strong> con los comentarios antes de programar (de esto hablaremos más adelante). Pero, ¿por qué lo recomienda?</p>\n\n<p>Escribir en un lenguaje humano cómo funciona algo antes de implementarlo realmente, te da la capacidad de ver si es lógico y suficiente, además te permite ponerte en los zapatos del usuario para notar deficiencias sobre todo en <strong>la interfaz</strong>. Los comentarios de interfaz es lo primero que deberías crear porque te servirán de guía para avanzar con tu diseño y, sobre todo, que sea lógico y fácil de usar.</p>\n\n<p>Una buena guía: si no eres capaz de crear un comentario concreto y corto sobre cómo funciona o por qué existe algo, <strong>lo más probable es que tengas que re-pensar tu diseño</strong>.</p>\n\n<h3 id=\"el-lenguaje-de-programación-no-es-suficiente-para-expresar-todo-lo-necesario\">El lenguaje de programación no es suficiente para expresar todo lo necesario</h3>\n\n<p>Todos los lenguajes de programación están pensados para ser un <strong>subconjunto del lenguaje humano</strong> que elimine las ambigüedades, manteniendo el mayor poder expresivo posible. Esto nos lleva a sus limitantes: es imposible, o por lo menos impráctico, intentar expresar todas las ideas con el código.</p>\n\n<p>En la práctica, el tiempo y los recursos para lograr algo son limitados, por lo que a veces es más conveniente y fácil para todos explicar lenguaje humano algo que intentar expresarlo con código, como los puristas afirman.</p>\n\n<p>No te sientas mal si tienes que recurrir de vez en cuando a explicar la forma en que funciona algo, siempre y cuando no sea la práctica común.</p>\n\n<h2 id=\"cómo-usar-los-comentarios-para-que-sean-valiosos\">¿Cómo usar los comentarios para que sean valiosos?</h2>\n\n<p>No todos los comentarios son valiosos, hay algunos que pueden estorbar más de lo que ayudan, por ejemplo, los que no aportan información a lo que es obvio en el código.</p>\n\n<p>Hablemos de algunas formas de aprovecharlos lo mejor posible para que contribuyan positivamente a aumentar la calidad del proyecto.</p>\n\n<h3 id=\"escribe-los-comentarios-primero\">Escribe los comentarios primero</h3>\n\n<p>Una de las partes más importantes de los comentarios como documentación es que deben ser concretos, cercanos a la realidad y que proporcionen la mayor cantidad de información útil posible.</p>\n\n<p>Para lograr esto, se tienen que crear lo más cerca que puedas a la <em>creación del código</em>. Pero como todos sabemos que después de escribir y probar (básicamente) el código vamos a sentir que ya está terminado, es buena práctica obligarte a escribirlos antes, justo como propone TDD con las pruebas.</p>\n\n<p>De esta manera te asegurarás que tu código esté documentado incluso antes de escribirlo y te servirán como una <strong>herramienta de diseño</strong> que te ayudará a pensar mejor en la usabilidad de tus módulos y piezas de software.</p>\n\n<h3 id=\"crea-comentarios-acerca-de-la-interfaz\">Crea comentarios acerca de la interfaz</h3>\n\n<p>La interfaz es el <strong>medio de uso</strong> que tus módulos o funciones presentan para que las demás partes de tu sistema lo usen. Lo primero que deberías documentar y explicar es <strong>esta interfaz</strong>, para que más personas a parte de ti puedan usar este pedazo de código.</p>\n\n<p>Debes escribir comentarios claros sobre:</p>\n\n<ul>\n  <li><strong>Cómo usar esa pieza de código</strong></li>\n  <li><strong>Por qué existe esa parte del sistema</strong></li>\n  <li><strong>Qué efectos tiene usarla</strong></li>\n</ul>\n\n<p>Este tipo de comentarios son los que aportan mayor valor al sistema y si están lo suficientemente completos, con ejemplos y explicaciones claras, son una documentación válida que está en un muy buen lugar: es fácil de encontrar y no se va a perder enterrada entre otros documentes que después nadie va a consultar.</p>\n\n<h3 id=\"evita-los-comentarios-sobre-la-implementación\">Evita los comentarios sobre la implementación</h3>\n\n<p>Los comentarios sobre la implementación son aquello que describen <em>qué</em> estas haciendo, como por ejemplo, sumar número, abrir un archivo, etc. Estos comentarios normalmente son innecesarios, ya que lo que se está haciendo es obvio si el código es lo suficientemente expresivo y <em>siempre deberíamos buscar que sea así</em>.</p>\n\n<p>De hecho, estos son los comentarios que hacen que la gente odie a los comentarios en general, pues en vez de proporcionar información extra son una carga que hay que mantener y pueden confundir si no son actualizados.</p>\n\n<p>Si realmente sientes que tienes que explicar <em>qué</em> estás haciendo con cierta pieza de código, primero pregúntate si no hay una manera de reescribirlo para que <strong>sea obvio</strong>. Si no existe o no es práctica esta solución, entonces escribe el comentario de la manera más concisa posible, incluyendo la razón de la existencia de ese código.</p>\n\n<p>Para hacer esto debes tomar muy en cuenta los recursos del proyecto: no te puedes tardar el triple del tiempo implementando la pieza de código perfecta porque no quieres escribir un comentario que explique cómo funciona.</p>\n\n<h2 id=\"conclusión\">Conclusión</h2>\n\n<p>Escribir comentarios es una de las grandes tareas que los programadores debemos dominar. Los lenguajes de programación y los entornos de programación cada vez le dan más poder a esta parte de los programas y permiten incluso escribir pruebas en ellos, generar documentación automática y listar tareas a partir de ellos.</p>\n\n<p>Si pones el suficiente esmero en aprender a escribir buenos comentarios y mantenerlos, serán una gran herramienta de diseño y documentación de tu software.</p>\n\n<p><em>Este artículo está basado en las ideas del “A Philosophy of Software Design de John Ousterhout”, en el que se le dedican <strong>4 capítulos</strong> al buen uso de los comentarios</em>.</p>\n",
      "date_published": "Wed, 30 Dec 2020 00:00:00 -0600"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/12/03/tipos-de-algoritmos-criptograficos.html",
      "url": "https://blog.thedojo.mx/2020/12/03/tipos-de-algoritmos-criptograficos.html",
      "title": "Tipos de algoritmos criptográficos: cifrados de bloque",
      "content_html": "<p>Ya hablamos de lo que es <a href=\"/2019/11/12/criptografia-basica-para-programadores-que-es-la-criptografia.html\">la criptografía</a>, ahora empecemos a hablar de los tipos de\nalgoritmos criptográficos que existen, sus características y sus principales diferencias. En este artículo hablaremos de los cifrados de bloque.</p>\n\n<h3 id=\"qué-es-un-cifrado-de-bloque\">¿Qué es un cifrado de bloque?</h3>\n\n<p>Los cifrados de bloque trabajan sobre un conjunto de bits de tamaño fijo, produciendo un texto cifrado del mismo tamaño. Para cifrar datos de tamaño arbitrario como sucede en la vida real, se utiliza el algoritmo de cifrado de bloque combinado con diferentes técnicas llamadas <strong>Modos de Operación</strong>.</p>\n\n<p>Algunos ejemplos de estos algoritmos de cifrado son el DES (Estadounidense), GOST 28147-89 (Ruso) y el actual <strong>AES</strong>.</p>\n\n<p>Un bloque cifrado debe ser <em>permutación pseudo-aleatoria</em> de bits, es decir, un conjunto de bits que sean <em>indistinguibles de bits generados completamente de manera aleatoria</em>. Es como si aventaras un montón de bits y dijeras que esa es la salida de tu algoritmo.</p>\n\n<p>Esta propiedad evita que un atacante obtenga información sobre el contenido del mensaje que fue cifrado.</p>\n\n<h2 id=\"ejemplos-de-cifrado-de-bloque\">Ejemplos de Cifrado de Bloque</h2>\n\n<p>Veamos algunos ejemplos de cifrados de bloque y sus características principales. Algunos se usan mientras que otros ya cayeron en el olvido.</p>\n\n<h3 id=\"des-y-triple-des\">DES y Triple DES</h3>\n\n<p>El <strong>Data Encryption Standard</strong> era el algoritmo que más se usaba en la década de los 90, lo suficientemente seguro para el poder de cómputo de aquel entonces. Usa una llave de 56 bits y bloques de 64 bits. Debido a estas características, el poder de cómputo actual hace que sea demasiado fácil de romper con el suficiente poder computacional (2^56, el tamaño de la llave, no se considera seguro ya), así que su uso está completamente desrecomendado.</p>\n\n<p>Su sucesor, el Triple DES realiza tres veces el mismo proceso usando tres llaves diferentes, con un tamaño de llave de 168 bits. Esto evita que sea posible romperlo a base de fuerza bruta, pero este proceso provee sólamente una seguridad de 112 bits, por lo que se considera ineficiente (usas el cómputo de tres DES para obtener seguridad de una llave del doble de tamaño) y por lo tanto su uso no es recomendado también.</p>\n\n<h3 id=\"aes\">AES</h3>\n\n<p>Debido a las visibles fallas de DES y triple DES, la NIST (National Institute of Standards and Technology de Estados Unidos) quería un algoritmo de cifrado que fuera dado a conocer públicamente y “capaz de proteger la información sensible del gobierno por los próximos cien años”.</p>\n\n<p>El <strong>Advanced Encryption Standard</strong> (Estándar de cifrado avanzado), es en realidad un subconjunto de los cifrados posibles de otro algoritmo llamado <a href=\"https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\">Rijndael</a> y que fue el ganador del concurso que la NIST hizo para seleccionar el nuevo algoritmo de cifrado estándar que sustituiría a DES.</p>\n\n<p>Rijndael fue creado por analistas criptográficos Belgas con objetivos claros: que fuera rápido y simple. Es una familia de cifrados que permiten cifrar bloques en múltiplos de 32 bits, desde 128 hasta 256 bits (128, 160, 192, 224, 256 bits). Las longitudes de llaves posibles son los mismos desde 128 hasta 256 bits.</p>\n\n<p>AES es Rijndael con bloques de <strong>128 bits</strong> y llaves que pueden ser de 128, 192 o 256 bits.</p>\n\n<p>AES aplica internamente una misma operación múltiples veces dependiendo del tamaño de la llave, y esto le permite se más seguro aumentando el tamaño de la llave. Esto es lo que se conoce como los “rounds” de AES, usando 10 para llaves de 128 bits, 12 para 192 bits y 14 para 256 bits.</p>\n\n<p>AES tiene un diseño de operaciones concurrentes, que es fácilmente paralelizable y puede implementarse muy eficientemente en hardware, de hecho los procesadores modernos normalmente lo traen implementado en sus circuitos, es parte del conjunto de instrucciones del procesador.</p>\n\n<p>La seguridad de AES según ciertos criptanalistas (por ejemplo, los creadores de Twofish) está completamente rota <em>teóricamente</em>, ya que hay ataques que pueden romper el cifrado de 14 ciclos (los ciclos completos que hace la versión de la llave de 256 bits) con ciertas condiciones, con 2^176 operaciones (lo cuál es un ataque que no se puede llevar a la práctica fácilmente).</p>\n\n<p>Los ataques mencionados anteriormente no tienen nada de prácticos, es decir, no se pueden llevar a la realidad en entornos normales, por lo que no se piensa por ningún lado que la seguridad de AES está comprometida. Si necesitas un algoritmo de cifrado confiable y rápido, con AES no te puedes equivocar.</p>\n\n<h2 id=\"otros-algoritmos\">Otros algoritmos</h2>\n\n<p>Como finalistas del concurso de la NIST hay otros algoritmos que vale la pena mencionar:</p>\n\n<ol>\n  <li>\n    <p><strong>Serpent.</strong> Es un algoritmo de cifrado de bloque que está pensado completamente para ser resistente. Aplicaca una operación repetidamente (rounds) pero a diferencia de AES la aplica 32 veces. Los criptanalistas han logrado romper 12 de esos 32 rounds, por lo que se piensa que tiene bastante espacio de reserva para continuar siendo seguro. La desventaja contra AES es que es 3 veces más lento.</p>\n  </li>\n  <li>\n    <p><strong>TwoFish.</strong> Este algoritmo tiene una construcción parecida a DES, y aplica su operación básica 16 veces. Los autores del algoritmo mencionan que es casi tan rápido como AES pero ofreciendo más margen de seguridad.</p>\n  </li>\n</ol>\n\n<h3 id=\"modos-de-operación\">Modos de operación</h3>\n\n<p>Un modo de operación es la forma en que se aplica un cifrado de bloque a un texto no cifrado que no es del tamaño exacto del bloque. Existen diferentes técnicas para hacer hacer que un algoritmo que acepta bloques de tamaño fijo acepte bloques arbitrarios. Los más conocidos son:</p>\n\n<ol>\n  <li>\n    <p><strong>Electronic Codebook (ECB)</strong>. Este modo de operación parte el contenido en bloques del tamaño aceptado (rellenando los bits faltantes para hacer un múltiplo exacto) y manda cada bloque a cifrar de manera independiente. Este modo de operación está completamente prohibido si quieres hacer que tu programa sea seguro, ya que bloques en tu mensaje con el mismo contenido siempre dará el mismo resultado, dando pistas sobre la información subyacente a observadores meticulosos. <strong>NO USES POR NINGÚN MOTIVO AES EN ECB</strong>.</p>\n  </li>\n  <li>\n    <p><strong>Cypher Block Chaining (CBC)</strong>. Este modo de igual manera parte el contenido en bloques del tamaño aceptado, pero en vez de cifrar cada bloque independientemente cifra el resultado de aplicar la operación XOR con el resultado del bloque anterior. De esta manera “encadena” los bloques haciendo que cada bloque dependa de los anteriores. Para cifrar el primer bloque utiliza un valor inicial generado de manera aleatoria. Para descifrar el valor se tiene que pasar el valor inicial aleatorio junto con el texto cifrado.</p>\n  </li>\n  <li>\n    <p><strong>Counter mode (CTR)</strong>. En este modo de operación no se cifran los bloques de texto sino la combinación de un número de uso único (<em>nonce</em>) y un contador (de ahí su nombre). Después, ese cifrado se combina con un bloque del mensaje. El contador se aumenta en cada bloque del mensaje, mientras que el número de uso único sólo cambia entre cifrados de diferentes mensajes. El modo contador no requiere relleno, ya que la operación XOR se puede realizar con contenido de cualquier tamaño. Este es el modo de operación más rápido y elegante, pero es muy fácil de usar mal ya que la repetición de <em>nonces</em> lo hace vulnerable.</p>\n  </li>\n</ol>\n\n<h3 id=\"completado-de-bloques\">Completado de bloques</h3>\n\n<p>Los modos de operación ECB y CBC siguen requiriendo bloques del tamaño aceptado por el algoritmo, por lo que deben existir técnicas para completar mensajes que no sean del tamaño de un múltiplo del bloque. Hablaremos de dos:</p>\n\n<ol>\n  <li>\n    <p>Relleno (<em>padding</em>). Esta técnica completa el último bloque del contenido que no alcanza el tamaño requerido con bytes que comunican el número de bytes que se están rellenando. Ejemplo: Si faltan 15 bytes para rellenar el mensaje agrega 15 bytes con el valor <code class=\"language-plaintext highlighter-rouge\">0f</code>, si falta un sólo byte agrega un byte con <code class=\"language-plaintext highlighter-rouge\">01</code>. Esta técnica sólo funciona para mensajes que construído de bytes completos. Puedes ver una especificación aquí: <a href=\"https://tools.ietf.org/html/rfc5652\">RFC 5652</a></p>\n  </li>\n  <li>\n    <p>Robo de texto cifrado (cyphertext stealing). Esta técnica es un poco más compleja pero más flexible. Consiste básicamente en tomar los bits que falten para el último bloque del texto cifrado anterior y dejar los bits no usados de ese mismo mensaje como el último bloque cifrado. Es un poco más complicado que esto, pero la idea básica aquí está. La NIST menciona tres formas de implementarlo <a href=\"https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38a-add.pdf\">aquí</a>.</p>\n  </li>\n</ol>\n\n<h2 id=\"qué-algoritmo-debería-usar\">¿Qué algoritmo debería usar?</h2>\n\n<p>La respuesta corta: AES con el mayor de tamaño de llave que tus recursos te permitan. Si tienes restricciones más fuertes de seguridad puedes pensar en TwoFish o Serpent, pero debes tener en cuenta que al no ser tan populares como AES puede que sus implementaciones en el lenguaje de programación de tu elección no estén disponibles o tengan vulnerabilidades no conocidas.</p>\n",
      "date_published": "Thu, 03 Dec 2020 00:00:00 -0600"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/10/19/origenes-de-la-deuda-tecnica.html",
      "url": "https://blog.thedojo.mx/2020/10/19/origenes-de-la-deuda-tecnica.html",
      "title": "Orígenes de la deuda técnica",
      "content_html": "<p>Tuvimos una plática con <a href=\"https://twitter.com/sagmmd\">Sagrario Meneses</a> sobre la <strong>deuda técnica</strong> y cómo podemos atacarla. En este artículo te presentamos un pequeño resumen de lo que es y algunas sugerencias sobre su manejo.</p>\n\n<h2 id=\"qué-es-la-deuda-técnica\">¿Qué es la deuda técnica?</h2>\n\n<p>La definición corta de deuda técnica es: <strong>todo aquello que hace que el software sea más difícil de producir y desarrollar</strong>.</p>\n\n<p>La deuda técnica es <strong>invisible</strong> para los miembros no directamente relacionados con el desarrollo del proyecto; para los que participan en ellos no siempre es fácil de ver.</p>\n\n<p>Esto incluye algunas cosas concretas como:</p>\n\n<ul>\n  <li>\n    <p>Los valores fijos que pueden cambiar en el futuro y en realidad deberían ser fáciles de cambiar sin tener que modificar el código (<em>hardcoding</em>)</p>\n  </li>\n  <li>\n    <p>Falta de información: cuando nadie sabe sobre cómo trabaja cierta parte del sistema o qué hace cierta pieza de código</p>\n  </li>\n  <li>\n    <p>Falta de distribución de información y conocimiento: cuando muy pocas personas saben sobre una parte del sistema y se convierten en cuello de botella</p>\n  </li>\n  <li>\n    <p>Falta de diseño explícito</p>\n  </li>\n  <li>\n    <p>Malas elecciones sobre diseño o tecnologías</p>\n  </li>\n  <li>\n    <p>Mezcla de diseños y estilos de programación diferente sin guía</p>\n  </li>\n  <li>\n    <p>Bugs que nadie conoce</p>\n  </li>\n</ul>\n\n<p>Sagrario comparó la deuda técnica con <strong>deberle dinero a la mafia</strong>: no la puedes negociar, y cuando te supera estás en grandes problemas. Así que más vale que la aprendamos a controlar porque la deuda técnica puede hacer colapsar tu sistema.</p>\n\n<h2 id=\"formas-de-hacer-visible-la-deuda-técnica\">Formas de hacer visible la deuda técnica</h2>\n\n<p>Una forma que nos parece súper efectiva para hacer visible (literalmente) la deuda técnica: ponerlo en tablero de control en un espacio, idealmente, <strong>físico</strong>, que esté a la vista tanto del equipo técnico como del equipo administrativo. Este tablero fosforescente recordará a todos que hay temas importantes para atender antes de que la mafia venga a cobrarte.</p>\n\n<p>En el caso de equipos remotos, el sustituto es un tablero de la herramienta de control que uses (Jira, Trello, Asana, Monday) que contenga temas importantes con respecto a las cosas que se pueden mejorar del sistema.</p>\n\n<p>Finalmente, tus herramientas de desarrollo te pueden dar ideas valiosas de las cosas que tienes que mejorar de tu código:</p>\n\n<ul>\n  <li>Te ayudan a listar las tareas pendientes (TODO’s)</li>\n  <li>Te advierten sobre posibles problemas de código</li>\n  <li>Si tienes una guía de estilo configurada, te dan advertencias sobre este punto también.</li>\n</ul>\n\n<h2 id=\"prácticas-para-evitarla-y-dominarla\">Prácticas para evitarla y dominarla</h2>\n\n<p>Para poder reducir la deuda técnica hacen falta dos\ncosas:</p>\n\n<ol>\n  <li>Pruebas, <strong>principalmente unitarias</strong>. Esto permitirá encontrar los errores más rápidamente, pero además refactorizar sin miedo.</li>\n  <li>Lineamientos estrictos respecto a las acciones en el proyecto. Sagrario lo llamó <em>disciplina</em>, es decir, tener reglas y los procesos necesarios para hacer que estas reglas sean seguidas.</li>\n</ol>\n\n<h2 id=\"otros-temas\">Otros temas</h2>\n\n<p>También, hablamos de otros temas como el rol de arquitecta de software que tiene en Linio. De esto podemos sacar dos cosas relevantes:</p>\n\n<ol>\n  <li>Aunque no se se sentía completamente lista para el puesto, aplicó para obtenerlo, y por eso está en una posición en la que está aprendiendo mucho. Sin miedo al éxito.</li>\n  <li>A veces la ataca el síndrome del impostor, con el que siente que no pertenece allí, <strong>pero continua trabajando y estudiando</strong>.</li>\n  <li>Mantiene la humildad sabiendo que no por tener el “<em>título</em>” es todopoderosa y ahora tiene autoridad sobre todos.</li>\n</ol>\n\n<h2 id=\"conclusión\">Conclusión</h2>\n\n<p>Disfrutamos mucho la plática con una experimentada desarrolladora de software que ha ido tomando nuevos roles y responsabilidades en la misma empresa, que también se ha ido transformando. Puedes aprender mucho de ella y de las preguntas que se hicieron en vivo:</p>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/7E_xzjMwZMU\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n",
      "date_published": "Mon, 19 Oct 2020 00:00:00 -0500"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/10/04/algunas-ideas-sobre-la-resolucion-de-problemas.html",
      "url": "https://blog.thedojo.mx/2020/10/04/algunas-ideas-sobre-la-resolucion-de-problemas.html",
      "title": "Algunas ideas sobre la resolución de problemas",
      "content_html": "<p>En este artículo veremos algunas de las ideas que George Polya presenta en su libro <a href=\"https://amzn.to/33qfw07\">How to Solve It</a> sobre la resolución de problemas.</p>\n\n<p>Estas ideas son sacadas del apartado “Aforismos y citas”, esperemos que pueda ayudar mejorar tus habilidades de resolución de problemas o que te saque del bache si te encuentras en uno.</p>\n\n<p>Cada subtítulo es una frase que consideramos que vale la pena analizar más detalladamente.</p>\n\n<h2 id=\"piensa-en-el-fin-antes-de-que-empieces\">Piensa en el fin antes de que empieces</h2>\n\n<blockquote>\n  <p>El tonto mira el principio, pero el sabio mira el final.</p>\n</blockquote>\n\n<p>Estas dos frases nos recuerdan que es muy importante:</p>\n\n<ol>\n  <li>Entender completamente el problema a resolver antes de empezar a intentar resolverlo.</li>\n  <li>Tener verdadero interés en el resolver el problema (Polya dice que debemos desear resolver el problema).</li>\n</ol>\n\n<p>En el caso de los <em>problemas prácticos</em>, es decir, a los que nos enfrentamos cada día en el desarrollo de software (no matemáticos, ni acertijos), se recalca que incluso hay que definir y aclarar algunas cosas que no se tienen desde el principio. Es necesario <strong>aclarar conceptos</strong>, investigar, a veces, el verdadero objetivo y muchas veces descomponer el problema en problemas más pequeños y fáciles de resolver.</p>\n\n<h2 id=\"la-diligencia-es-la-madre-de-la-buena-suerte\">La diligencia es la madre de la buena suerte</h2>\n\n<p>Muchas veces, parece que las ideas de resolución de un problema nos llegan como por arte de magia a la cabeza, por buena suerte o gratis. Polya dice que una precondición para tengamos estas buenas ideas es que <strong>las debemos merecer</strong>.</p>\n\n<p>¿Cómo nos hacemos “merecedores” de tener buenas ideas?</p>\n\n<blockquote>\n  <p>Un roble no cae con la primera estocada</p>\n</blockquote>\n\n<p>Debemos persistir en buscar <em>diferentes</em> maneras de resolver el problema, entenderlo completamente como hemos mencionado y aplicar diferentes formas y técnicas de resolución, que hemos visto en otros artículos.</p>\n\n<blockquote>\n  <p>Debemos hacer lo que podamos si no podemos hacer lo que debemos</p>\n</blockquote>\n\n<p>Intentar por diferentes medios incluso después de fallar es una forma de merecer que nos lleguen nuevas ideas.</p>\n\n<blockquote>\n  <p>Un sabio convierte oportunidades en buena fortuna</p>\n</blockquote>\n\n<p>Esta última frase se menciona por lo importante que es <strong>NO despreciar ninguna de las ideas que nos vengan a la cabeza</strong>, por simple o tonta que parezca. Alguien experimentado en resolver problemas puede que no tenga más ideas en total que alguien no experimentado, pero <em>sabe reconocer mejor ideas prometedoras</em>.</p>\n\n<h2 id=\"un-retraso-sabio-hace-la-carretera-segura\">Un retraso sabio hace la carretera segura</h2>\n\n<p>Esta frase nos recuerda la importancia de no apresurarnos a ejecutar un plan que parece perfecto para llegar a una solución. Según la propuesta de Polya para resolver problemas (entendimiento, planeación, ejecución, revisión), la parte más difícil de lograr es <em>el plan</em>, pero la parte en la que más trabajo se lleva es la <strong>ejecución de ese plan</strong>. Por tu experiencia en desarrollo de software tal vez ya lo sepas.</p>\n\n<p>Pero al encontrar lo que parece un buen plan no conviene ejecutarlo lo más rápido posible sin darle al menos una segunda revisión. Tenemos que recordar que:</p>\n\n<blockquote>\n  <p>Creemos muy pronto lo que anhelamos</p>\n</blockquote>\n\n<p>Nuestro juicio puede nublarse si deseamos salir muy rápido de algo y podemos caer en la trampa de creer muy fácilmente en un plan de resolución no tan sólido.</p>\n\n<p>¿A qué te recuerda esto de pensarlo muy bien antes de comprometerse completamente con una solución? En el desarrollo de software hacer <strong>pruebas de concepto, prototipos y simulaciones</strong> es una muy buena forma de evaluar un plan de solución antes de comprometer todos los recursos para la creación de esa solución.</p>\n\n<h2 id=\"mira-alrededor-cuando-obtengas-tu-primer-hongo-o-tu-primer-descubrimiento-crecen-en-grupos\">Mira alrededor cuando obtengas tu primer hongo o tu primer descubrimiento: crecen en grupos</h2>\n\n<p>¿Te suena? Muchas veces las soluciones a diferentes problemas, o a diferentes partes del problema se encuentran muy cerca entre ellas, o son una variación de la solución, aplicación del resultado o aplicación del método de resolución.</p>\n\n<h2 id=\"pregunta-qué-por-qué-dónde-cuándo-y-cómo\">Pregunta Qué, Por qué, Dónde, Cuándo y cómo</h2>\n\n<p>Finalmente, esta frase habla de la importancia de hacer el mayor número de preguntas posibles sobre el problema en cuestión, pregunta, pregunta, pregunta hasta que tengas toda la información.</p>\n\n<h2 id=\"conclusión\">Conclusión</h2>\n\n<p>Repasa estas ideas cuando te sientas atorado para resolver algún problema y puede que te ayuden a salir del hoyo. Y sobre todo, lee <a href=\"https://amzn.to/33qfw07\">“How to Solve It”</a>.</p>\n",
      "date_published": "Sun, 04 Oct 2020 00:00:00 -0500"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/09/20/maneras-de-hacer-una-api-con-go-lang.html",
      "url": "https://blog.thedojo.mx/2020/09/20/maneras-de-hacer-una-api-con-go-lang.html",
      "title": "Formas de hacer una API con Go",
      "content_html": "<p>Go es uno de los lenguajes modernos más usados. Ya hablamos de <a href=\"/2019/09/01/por-que-deberias-aprender-go.html\">por qué deberías aprenderlo</a>.</p>\n\n<p>Ahora hablemos de un caso de uso práctico: <strong>úsalo para crear una API HTTP</strong>. En este artículo nos enfocaremos en la parte de comunicación HTTP y la generación de respuestas adecuadas.</p>\n\n<p>La funcionalidad básica de tu API puede o no adaptarse completamente a Go (no es es tan fácil de escribir como un lenguaje dinámico como Python), pero definitivamente es un <strong>lenguaje excelente</strong> para crear interfaces de comunicación web, debido a su alto rendimiento y eficiencia.</p>\n\n<p>Puedes ver algunas de las comparativas en los siguientes artículos:</p>\n\n<ul>\n  <li>\n    <p><a href=\"https://stressgrid.com/blog/benchmarking_go_vs_node_vs_elixir/\">Comparando el rendimiento de Go, NodeJS y Elixir</a>. TL;DR: Go y Elixir llegan a manejar más de 100k conexiones sin ningún problema, Node empieza con problemas desde 30k y el más eficiente en cómputo y memoria utilizada <em>por mucho</em> es <strong>Go</strong>.</p>\n  </li>\n  <li>\n    <p><a href=\"https://github.com/mroth/phoenix-showdown\">Comparación de frameworks web ligeros</a>. Este artículo es un poco viejo, pero el resumen es que Gin (un framework web ligero de Go) es el que más peticiones soporta por segundo y con una consistencia excelente.</p>\n  </li>\n</ul>\n\n<p><img src=\"https://res.cloudinary.com/hectorip/image/upload/v1574629781/Screenshot_2019-11-24_15.09.25_ozqwcu.png\" alt=\"Comparativa de micro-frameworks Web\" /></p>\n\n<p>Hablemos de tres formas de crear una API sobre HTTP para tu próximo proyecto. Pero antes hablemos de una opción simple que no cubre muchos casos pero que se oye recomendada por todo internet.</p>\n\n<h2 id=\"la-biblioteca-estándar\">La biblioteca estándar</h2>\n\n<p>Cuando hice mi primer proyecto en Go, gran parte de la investigación sobre qué usar para crear un proyecto de una API web apuntaba a los <strong>paquetes nativos</strong> de Go.</p>\n\n<p>Go tiene una biblioteca estándar que cubre <strong>muchas</strong> de las necesidades de un desarrollador moderno. Si has programado en él podrás estar de acuerdo en que se siente como subirte en hombros de gigantes, debido a que las personas que lo diseñaron y construyeron son <em>las mismas personas que sentaron las bases para los sistemas operativos modernos</em>. Imagínate cuánta experiencia tienen.</p>\n\n<p>En la biblioteca estándar podemos encontrar un paquete que se llama <code class=\"language-plaintext highlighter-rouge\">net/http</code> con el que puedes hacer, un servidor web con direccionamiento de rutas sencillo (la base de tu API) <strong>con muy pocas líneas de código</strong>. Puedes recibir peticiones HTTP, procesarlas y devolver una respuesta HTTP. El ciclo básico request -&gt; response.</p>\n\n<p>Aquí hay un ejemplo:</p>\n\n<div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">package</span> <span class=\"n\">main</span>\n\n<span class=\"k\">import</span> <span class=\"p\">(</span>\n\t<span class=\"s\">\"fmt\"</span>\n\t<span class=\"s\">\"net/http\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"c\">// Implementando rutas HTTP</span>\n<span class=\"k\">func</span> <span class=\"n\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\t<span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">HandleFunc</span><span class=\"p\">(</span><span class=\"s\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"p\">)</span>\n\t<span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">ListenAndServe</span><span class=\"p\">(</span><span class=\"s\">\"localhost:8080\"</span><span class=\"p\">,</span> <span class=\"no\">nil</span><span class=\"p\">)</span> <span class=\"c\">// iniciando el servidor</span>\n<span class=\"p\">}</span>\n\n<span class=\"c\">// handler recibe la petición http y la procesa para devolver una respuesta http</span>\n<span class=\"k\">func</span> <span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">response</span> <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">ResponseWriter</span><span class=\"p\">,</span> <span class=\"n\">request</span> <span class=\"o\">*</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\t<span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Fprintf</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"s\">\"Hola Go API's\"</span><span class=\"p\">)</span> <span class=\"c\">// Falta responder JSON</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>Si tu API es sencilla, expone pocas URLs y sabes que no requerirás mucho en campo de las peticiones HTTP (procesamiento de parámetros, manejo de rutas, etc.) la biblioteca estándar es una solución buena, pero para otros casos se queda un poco corta, ya que tendrías que implementar varias cosas a mano.</p>\n\n<p>Su uso es sencillo como acabas de ver. Usar un framework web tiene el costo de agregar complejidad a <strong>cambio de funcionalidades que no tienes que desarrollar tú</strong>. Pero aquí te compartimos un artículo en el que un experto hablá de por qué <em>él</em> prefiere no usar frameworks: <a href=\"https://medium.com/code-zen/why-i-don-t-use-go-web-frameworks-1087e1facfa4\">Why I Don’t Use Go Web Frameworks</a>.</p>\n\n<p>Por eso te presentamos las opciones más comunes y algunos ejemplos.</p>\n\n<h2 id=\"gorilla-web-toolkit\">Gorilla Web Toolkit</h2>\n\n<p><img src=\"https://avatars2.githubusercontent.com/u/489566?s=200&amp;v=4\" alt=\"Gorilla Web Toolkit logo\" class=\"align-center\" /></p>\n\n<p><a href=\"https://www.gorillatoolkit.org/\">Gorilla Toolkit</a> es un conjunto de herramientas para web que, entre otras cosas tiene:</p>\n\n<ul>\n  <li>Un router más completo que el de la biblioteca estándar: <em>Gorilla Mux</em>. Es compatible con el tipo de dato nativo de Go para las peticiones. Además incluye:\n    <ul>\n      <li>Ruteadores secundarios, para que organices mejor tu código.</li>\n      <li>Inversión de URL’s: te permite generar la URL a partir de un identificador.</li>\n      <li>Matches complejos</li>\n    </ul>\n  </li>\n  <li>Middlewares: logging, compresión, recuperación</li>\n  <li>Manejo de sesiones con cookies seguras</li>\n  <li>Implementación de WebSockets y RPC</li>\n  <li>Conversión de valores de entrada en <code class=\"language-plaintext highlighter-rouge\">struct</code> de Go</li>\n</ul>\n\n<p>Gorilla Toolkit <strong>no es un framework</strong>, puedes usar cada de sus herramientas por separado, como las vayas necesitando. Así que puede empezar con la librería estándar y agregar lo que necesitas de Gorilla poco a poco.</p>\n\n<h2 id=\"gin\">Gin</h2>\n<p><img src=\"https://res.cloudinary.com/hectorip/image/upload/c_scale,w_250/v1600730661/color_whycuu.png\" alt=\"Gin go logo\" class=\"align-center\" /></p>\n\n<p><a href=\"https://github.com/gin-gonic/gin\">Gin</a> es un framework web para Go bastante completo que clama ser el más rápido de todos los frameworks web para Go. Ya está en su versión 1, por lo que puedes usarlo con confianza en proyectos serios.</p>\n\n<p>Gin usa <a href=\"https://github.com/julienschmidt/httprouter\">httpRouter</a> que tiene funciones parecidas a Gorilla Mux, pero que dice escalar mejor que el de la librería estándar incluso.</p>\n\n<p>Tiene utilidades incluídas para hacer render de XML, JSON, YAML y ProtoBuf, o sea que es perfecto para crear diferentes tipos de API’s.</p>\n\n<p>Además, tiene un montón de cosas más que puedes explorar en su documentación, que es muy completa y con muchos ejemplos, por si fuera poco.</p>\n\n<h2 id=\"beego\">Beego</h2>\n\n<p><img src=\"https://beego.me/static/img/beego_purple.png\" alt=\"Beego logo\" class=\"align-center\" /></p>\n\n<p><a href=\"https://beego.me/\">Beego</a> es un framweork que se especializa en API’s RESTful e intenta usar lo mejor posibles las características de Go como las interfaces y las estructuras embebidas. Parece que está hecho en China.</p>\n\n<p>Las cuatro características que resalta son:</p>\n\n<ol>\n  <li>Fácil de usar: es MVC  y tiene herramientas incluídas para poder desarrollar más fácilmente.</li>\n  <li>Inteligente: tiene características de ruteo avanzadas junto con monitoreo integrado que te permiten observar el estado de tu API.</li>\n  <li>Modular: su estructura interna está compuesta por varios módulos que te permiten avanzar rápidamente.</li>\n  <li>Alto desempeño</li>\n</ol>\n\n<p>Es un framework bastante completo, que cumple con todo lo mínimo necesario para que puedas empezar a desarrollar tu API eficientemente, pero parece que tiene un defecto: al ser hecho en china, la documentación no está pulida completamente y puede que haya poca información en tutoriales y otras páginas.</p>\n\n<h2 id=\"echo\">Echo</h2>\n\n<p><img src=\"https://cdn.labstack.com/images/echo-logo.svg\" alt=\"Logo de Echo\" class=\"align-center\" /></p>\n\n<p><a href=\"https://echo.labstack.com/\">Echo</a> se promociona como el framework web minimalista. Tiene soporte para HTTP/2, ruteo sin uso de memoria dinámica (para mejor desempeño), TLS automático, middlewares flexibles y funciones utilitarias para responder fácilmente las peticiones web en cualquier formato.</p>\n\n<p>En algunos benchmarks <strong>echo</strong> parece ser más rápido que Gin.</p>\n\n<p>Tiene desarrollo bastante activo y la documentación contiene ejemplos suficientes, junto con algunas recetas y para que logres avanzar rápido.</p>\n\n<h2 id=\"conclusión\">Conclusión</h2>\n\n<p>Existen múltiples opciones para crear tu API en Go. Hay para escoger dependiendo de tus gustos y de lo más importante para tu proyecto.</p>\n",
      "date_published": "Sun, 20 Sep 2020 00:00:00 -0500"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/09/10/no-hagas-hagas-devops-por-convivir.html",
      "url": "https://blog.thedojo.mx/2020/09/10/no-hagas-hagas-devops-por-convivir.html",
      "title": "No hagas hagas DevOps por convivir",
      "content_html": "<p>Tuvimos una plática con Domingo Suárez(<a href=\"https://twitter.com/domix\">@domix</a>) acerca de diferentes temas que le interesan a los desarrolladores.</p>\n\n<p>En este artículo te vamos a dar un resumen.</p>\n\n<h2 id=\"cómo-nos-dejamos-influir-para-adoptar-una-tecnología\">Cómo nos dejamos influir para adoptar una tecnología</h2>\n\n<p>Lo primero de lo que hablamos es de la forma en que muchas veces adoptamos la tecnología: <strong>por moda</strong>. A veces es porque alguien con autoridad la mencionó o muchos miembros de la comunidad la están usando. A los desarrolladores nos gustan las cosas <em>brillantes</em>.</p>\n\n<p>Generalmente esa decisión tiene un costo bastante alto:</p>\n\n<ul>\n  <li>Te metes en cosas de las que no hay la suficiente información disponible</li>\n  <li>Te enfrentas con problemas totalmente desconocidos</li>\n  <li>Gastas recursos que podrías gastar mejor en otro lado.</li>\n</ul>\n\n<p><strong>La lección:</strong> no tienes que aprender y usar todo lo nuevo que sale. Usa tecnología <em>aburrida</em>: probada por el tiempo, de la que exista mucha información y usada por muchos desarrolladores de los que podrás aprender rápidamente y enfocarte en los verdaderos problemas que <strong>diferencian</strong> a tu solución.</p>\n\n<h2 id=\"qué-es-devops\">¿Qué es DevOps?</h2>\n\n<p>Uno de los temas principales que tratamos es la aclaración de lo que de verdad significa el término <strong>DevOps</strong>.</p>\n\n<p>Domingo explicó que DevOps es una <strong>cultura</strong> que intenta mejorar el flujo de trabajo que existe entre el área de desarrollo y la de operación del software (la encargada de ponerlo en manos de los usuarios y monitorearlo). Intenta <strong>mejorar los hilos organizacionales</strong>.</p>\n\n<p>Nos explicó que el término “DevOps” originalmente era un hashtag de Twitter para hablar de esta cultura en una conferencia organizada por <a href=\"https://blog.newrelic.com/engineering/devops-name/\">Patrick Debois</a>.</p>\n\n<p>Domingo dejó muy claro que <strong>DevOps no es un puesto, ni un rol.</strong> No lo puedes comprar con una herramienta, sino que es una serie de prácticas y <strong>una forma de pensar</strong> que <em>tu empresa</em> debe desarrollar.</p>\n\n<p>Platicamos a además de que DevOps establece <em>“Las 3 vías”</em> que son tres procesos o tres formas en las que la información viaja.</p>\n\n<p>La primera vía consiste en poner el código en producción lo más rápido posible, con opciones como quitarlo rápidamente si no funciona bien (rollback).</p>\n\n<p>La segunda vía es <strong>el monitoreo del software en producción</strong>, para poder actuar rápidamente. Puede ser para mejorarlo, para corregir fallas y para aprender del verdadero uso que los usuarios finales le dan.</p>\n\n<p>La tercer vía es la repetición de estos dos procesos y la ejecución de ejercicios con el objetivo de pulir los procesos y aprender más cosas. Esta vía incluye simulaciones de falla, sesiones de estudio, sesiones de preparación y análisis de fallos, etc.</p>\n\n<h2 id=\"mentores-y-aprendizaje\">Mentores y aprendizaje</h2>\n\n<p>Un tema repetido desde el principio es que Domingo tuvo un mentor que se llama <strong>Humberto</strong>.  Una persona que sin darse cuenta le ayudó mucho a adoptar hábitos sanos de aprendizaje y le enseñó muchas cosas directamente.</p>\n\n<p>De esto salió que en la industria de desarrollo de productos digitales <strong>falta en práctica poner más en práctica la mentoría</strong>, ya que nos puede ayudar avanzar y puede a crear personas más hábiles.</p>\n\n<p>Llegamos a una conclusión: <strong>la mentoría es una responsabilidad compartida</strong>. El mentor tiene la responsabilidad de guíar al aprendiz de la mejor forma, porque puede influir de formas muy poderosas en su vida, pero la responsabilidad de aprovechar bien esa guía y aplicar los consejos es de la persona que está siendo mentoreada.</p>\n\n<p>En este punto Alex levantó un punto interesante: en lugares como Silicon Valley, los directivos tienen la idea de que preparar gente dentro de su empresa es beneficioso en general para el ecosistema. Si todos adoptan esa mentalidad, la próxima persona que llegue a tu empresa habrá sido entrenada de la mejor manera, <strong>elvando el nivel de la comunidad</strong>.</p>\n\n<p>Le lección: Aceptar o pedir una mentoría <strong>te hará crecer</strong> y adoptar la idea de que preparar a las personas es beneficioso ayudará a todo el ecosistema.</p>\n\n<h2 id=\"cómo-avanzar-en-tu-carrera-como-desarrollador\">Cómo avanzar en tu carrera como desarrollador</h2>\n\n<p>Conectado con el tema anterior, hablamos un poco de <strong>cómo puedes volverte mejor desarrollador</strong>, alcanzar un nuevo puesto y obtener un mejor sueldo. La conclusión es:</p>\n\n<ol>\n  <li>\n    <p>Tienes que mantenerte <strong>siempre aprendiendo</strong> nuevas cosas, no sabes lo que puede servirte más adelante.</p>\n  </li>\n  <li>\n    <p><strong>No estudies sólo lo relacionado con tu trabajo actual</strong>, estudiar cosas que no tienen nada que ver con lo que haces hoy puede abrirte las puertas a nuevas oportunidades.</p>\n  </li>\n  <li>\n    <p>Haz proyectos de las cosas que estás aprendiendo, no sólo leas o veas videos.</p>\n  </li>\n  <li>\n    <p>Has cosas que de verdad disfrutes.</p>\n  </li>\n</ol>\n\n<h2 id=\"microservicios\">Microservicios</h2>\n\n<p>La mayoría de las empresas no los necesita, porque aunque quieran imitar a Netflix o Google o Amazon o Facebook, no tienes sus mismos problemas.</p>\n\n<p>Además la arquitectura de microservicios tiene retos a los que tal vez no te quieres enfrentar, como las transacciones distribuidas.</p>\n\n<p><strong>¿Cuándo es buena idea usar microservicios?</strong> Domingo dio dos criterios:</p>\n\n<ol>\n  <li>Tu base de usuarios es muy grande, los microservicios te ayudarán a escalar mejor.</li>\n  <li>Tu base de código es muy grande. Así la podrás dividir mejor entre tus <em>decenas</em> de programadores.</li>\n</ol>\n\n<h2 id=\"aprender-java-vale-la-pena\">Aprender Java vale la pena</h2>\n\n<p>Después, hablamos de qué tanto vale la pena aprender Java en 2020, ya que Domingo es un <strong>Java Champion</strong>, uno de los pocos de México y de LATAM.</p>\n\n<p>La conclusión: <strong>Java es un lenguaje que vale la pena aprender, por ser una tecnología probada (aburrida) y con muchas cosas desarrolladas</strong>.</p>\n\n<p>Algunas de las características que resaltamos de Java:</p>\n\n<ul>\n  <li>La JVM es una pieza de software magnífica que tiene optimizaciones para ser muy eficiente, para ayudarte aunque tu código no sea tan bueno.</li>\n  <li>Un montón de lenguajes corren sobre la JVM. Si te gusta más otro que Java puedes combinarlos y compartir lo que ya existe en el ecosistema de Java</li>\n  <li>Java como lenguaje ha avanzado mucho, adoptando formas de programar más modernas.</li>\n  <li>Sus características intrínsecas, como su compilador y el tipado estático lo hacen ideal para cierto tipo de problemas en los que tienes que reducir al mínimo los errores en tiempo de ejecución.</li>\n</ul>\n\n<p>El consejo de domingo es: Si quieres empezar con Java empieza con algún framework modernos como <a href=\"https://micronaut.io/\">Micronaut</a>.</p>\n\n<h2 id=\"recomendaciones-de-libros\">Recomendaciones de libros</h2>\n\n<ul>\n  <li><a href=\"https://amzn.to/3jVxLQu\">The Phoenix Project</a></li>\n  <li><a href=\"https://landing.google.com/sre/books/\">Site Reliability Engineering</a></li>\n  <li><a href=\"https://amzn.to/3k2ZTRD\">Joel on Software</a></li>\n</ul>\n\n<p>Disfrutamos mucho de esta plática y esperamos tenerlo con nosotros de nuevo pronto. La puedes ver aquí:</p>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/3zQ3qSFDdW0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n",
      "date_published": "Thu, 10 Sep 2020 00:00:00 -0500"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/09/01/a-philosophy-of-software-design-organiza-bien-los-sistemas-en-capas.html",
      "url": "https://blog.thedojo.mx/2020/09/01/a-philosophy-of-software-design-organiza-bien-los-sistemas-en-capas.html",
      "title": "A Philosophy of Software Design: Organiza bien los sistemas en capas",
      "content_html": "<p>Hemos escuchado muchísimo acerca de los sistemas en capas como <em>Modelo-Vista-Controlador</em>, Modelo-Vista-Template, Modelo-Vista-*, <em>MV-lo-que-sea</em> etc. y eso es porque la mayoría de los sistemas actuales se organiza así: <strong>en capas</strong>. Además, nuestros módulos se dividen naturalmente en capas con diferentes funciones (como código que usa a otro).</p>\n\n<p>Hablemos de por qué es efectiva esta forma de organización (o patrón de arquitectura)\nde código, de sus características y cómo podemos aprovecharla para sacar el máximo provecho.</p>\n\n<h2 id=\"características-de-los-sistemas-en-capas\">Características de los sistemas en capas</h2>\n\n<p>Sabemos que la mejor forma de organización de un proyecto es <strong>descomponerlo</strong> en partes independientes que <strong>oculten</strong> información de otras.</p>\n\n<p>La comunicación entre las diferentes partes se da por medio de una <strong>interfaz</strong>. Esta interfaz, es la <strong>API</strong> del componente, ya que será usada de manera automática por otra parte del programa.</p>\n\n<p>En un sistema en capas el conjunto de elementos pertenecientes a una capa sólo se puede comunicar con la capa superior y con la capa inferior.</p>\n\n<p>Si un sistema tiene 10 capas, cada componente puede comunicarse máximo con 2 capas.\nEn los sistemas más comunes, como el de 3 capas (MVC, MVT, MV*), sólamente la capa intermedia (el controlador, por ejemplo) puede comunicarse con dos capas, mientras que las otras sólo se comunican con la intermedia.</p>\n\n<p><a href=\"https://amzn.to/2GdeHi5\">John Ousterhout</a> usa la división en capas para explicar cómo se organiza el software con respecto al usuario final: la capa de “hasta arriba” es la que interactúa directamente con el usuario y la de “hasta abajo” es la más alejada del usuario, generalmente el núcleo de tu sistema.</p>\n\n<p>Hablemos ahora de las mejores prácticas según <a href=\"https://amzn.to/2GdeHi5\">A Philosphy of Software Design</a>.</p>\n\n<h2 id=\"diferente-capa-diferente-abstracción\">Diferente capa, diferente abstracción</h2>\n\n<p>El concepto que debes tener más claro para descomponer tu software en capas es que cada capa debe tener sus propias abstracciones. Ousterhout da el ejemplo de un sistema de archivos:</p>\n\n<ol>\n  <li>La capa que interactúa con el mundo exterior o la más alta, tiene la abstracción de un archivo</li>\n  <li>La siguiente capa tiene la abstracción de bloques de memoria y caché</li>\n  <li>La siguiente capa maneja directamente los bloques en el disco</li>\n</ol>\n\n<p>Esta abstracción es efectiva porque cada capa trabaja con abstracciones diferentes y no repiten ninguna entre ellas.</p>\n\n<p>Esta es la idea básica que debes checar en tus diseños, si notas que una abstracción no cambia de una capa a otra, algo está saliendo mal. ¿Cómo puedes identificarlas?</p>\n\n<h3 id=\"funciones-de-paso\">Funciones de paso</h3>\n\n<p>Estos son funciones que no hacen nada mas que mandar llamar una función de la siguiente capa, normalmente para cumplir con la limitante de comunicación entre capas.</p>\n\n<p>Esto indica que no hay una división clara de responsabilidad entre clases o módulos. Para resolver este problema tienes que asegurarte de que la interfaz y la funcionalidad de este punto de tu sistema estén en el mismo módulo.</p>\n\n<p>Evitar este tipo de métodos te evitará complicar la interfaz sin añadir ninguna funcionalidad.</p>\n\n<h3 id=\"variables-pasadas\">Variables pasadas</h3>\n\n<p>Similar al caso anterior, si tienes una variable que recibes en la llamada de tu módulo y no haces nada con ella mas que pasarla a una capa inferior, estás mezclando las abstracciones entre capas.</p>\n\n<p>A veces son necesarias, pero el manejarlas crea complejidad. Dependiendo del paradigma y el lenguaje de programación deberías buscar una solución adecuada.</p>\n\n<p>Por ejemplo, en lenguajes orientados a objetos podrías guardar todos lo valores a los que necesitas constante acceso desde diferentes lugares un una variable de “contexto” y que generalmente está almacenada en un lugar en el que todas tus funciones puedan acceder. Algunos frameworks usan su variable de <code class=\"language-plaintext highlighter-rouge\">settings</code> para poner información necesaria ahí.</p>\n\n<p>Los siguientes dos consejos tratan más los diferentes niveles de código que capas del sistema.</p>\n\n<h3 id=\"evita-lo-más-que-puedas-los-decoradores\">Evita lo más que puedas los decoradores</h3>\n\n<p>Ousterhout habla en contra del patrón decorador. Este patrón consiste en envolver clases, objetos o funciones con otros, con el fin de extender la funcionalidad. Los decoradores intentan mantener una interfaz muy similar o exactamente igual al elemento original.</p>\n\n<p>Un ejemplo es la clase de Java <code class=\"language-plaintext highlighter-rouge\">BufferedInputStream</code> es un decorador de <code class=\"language-plaintext highlighter-rouge\">InputStream</code>, añadiéndole el buffering.</p>\n\n<p>Los decoradores pueden crear un montón de funciones y variables de pasada y agregar un montón de código de soporte sin de verdad agregar tanta funcionalidad como código.</p>\n\n<p><strong>APoSD</strong> (el libro) sugiere crear entidades separadas cuando sea posible y evitar el sobreuso de este patrón, a menos que de verdad tenga sentido, por ejemplo: cuando tienes un módulo muy profundo que con un decorador vas a poder reutilizar todo con muy poco código de soporte.</p>\n\n<h3 id=\"abstracciones-diferentes-entre-la-interfaz-y-la-implementación\">Abstracciones diferentes entre la interfaz y la implementación</h3>\n\n<p>Tu código debería de exponer en su interfaz la abstracción más conveniente para los usuarios de tu módulo, sin importar las abstracciones más convenientes para manejar los datos internamente.</p>\n\n<p>Por este principio, es muy normal que las abstracciones de la interfaz no sean las mismas interfaces que tu implementación usa.</p>\n\n<p>Un ejemplo: imagina que estás escribiendo un componente que te permite editar texto. <strong>¿Cuál es la unidad básica con la que el usuario de tu módulo interactuará?</strong></p>\n\n<p>Puede ser un carácter, una línea, un párrafo. Ya que tu la visualización del texto es en líneas, lo más conveniente para la implementación es una abstracción que represente una línea de texto.</p>\n\n<p>Pero para el usuario de la clase que maneja texto lo más conveniente es una interfaz que use carácteres porque es más fácil de usar, se quita la responsabilidad de manejar las líneas.</p>\n\n<p>Entonces tu clase queda así: internamente representa el texto como un conjunto de líneas, pero las interfaces lo usan como si fuera un conjunto de caractéres en los que puedes insertar y borrar sin preocuparte por la organización en líneas.</p>\n\n<h2 id=\"conclusión\">Conclusión</h2>\n\n<p>La separación en capas permitirá que tu código esté mejor organizado y que sea más fácil de entender. Tener cuidado con la forma en que las capas se organizan, cómo se dividen responsabilidades y las interfaces que cada capa expone hará mucho más mantenible y entendible tu base de código.</p>\n",
      "date_published": "Tue, 01 Sep 2020 00:00:00 -0500"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/07/19/traduccion-automatica-de-textos-un-caso-practico.html",
      "url": "https://blog.thedojo.mx/2020/07/19/traduccion-automatica-de-textos-un-caso-practico.html",
      "title": "Traducción automática: API's vs tu propio modelo",
      "content_html": "<p>Traducir texto es una tarea frecuente y que puede realizarse de diferentes maneras, en este artículo queremos explorar algunas de ellas.</p>\n\n<p>Existen sitios donde la traducción puede hacerse en línea, como en <a href=\"https://translate.google.com.mx/?hl=es\">Google Translate</a>, sin embargo, en muchos casos existe un límite en la cantidad de texto que puedes traducir.</p>\n\n<p>También puedes utilizar <strong>APIs que pueden ayudarte a hacer dicho trabajo</strong>, dichas APIs también tiene límites por traducción.</p>\n\n<p>Una solución que nos resulta interesante es la traducción utilizando algún modelo de <strong>Aprendizaje de Máquina</strong> que ya haya sido previamente entrenado.  En este artículo podrás explorar estos diferentes métodos y el código que podrías utilizar para llevarlo a cabo, entendiendo las ventajas y desventajas que cada método ofrece.</p>\n\n<p>Hablemos de los diferentes métodos.</p>\n\n<h2 id=\"interfaz-gráfica\">Interfaz gráfica</h2>\n\n<p>Google Translate te permite traducir 5,000 palabras a la vez en su interfaz. Si lo vas a hacer pocas veces y los textos no rebasan esa cantidad de palabras, ¿para qué construir algo?</p>\n\n<p>Esta opción nos recuerda que a veces la mejor solución es que no programemos nada.</p>\n\n<p><strong>Ventajas</strong>: Inmediata, fácil de usar y sin costo.\n<strong>Desventajas</strong>: Requiere intervención humana cada que se tenga que traducir algo.</p>\n\n<h2 id=\"apis\">API’s</h2>\n\n<p>Si quieres automatizar las tareas de traducción para integrarlas en un sistema más grande o generar salidas que se queden almacenadas en archivos o bases de datos, una solución es crear un programa que consuma una API de traducción.</p>\n\n<p>Algunas opciones son:</p>\n\n<ul>\n  <li>\n    <p><strong>Cloud Translation</strong> de Google Cloud Platform. Tiene dos niveles de traducción: el básico que soporta el modelo tradicional de traducción y el avanzado que permite customizar los modelos de traducción además de incluir glosarios y otras monerías.</p>\n  </li>\n  <li>\n    <p><a href=\"https://www.ibm.com/watson/services/language-translator/\">Watson Language Translator</a> permite traducir una gran cantidad de formatos de texto en muchos lenguajes. La única desventaja es que las API’s de IBM no son las más hermosas y en general sus sitemas de administración fallan bastante.</p>\n  </li>\n  <li>\n    <p><strong>Otras</strong>. En <a href=\"https://rapidapi.com/collection/google-translate-api-alternatives\">RapidAPI</a> puedes encontrar una colección actualizada de las alternativas a Google Translation API.</p>\n  </li>\n</ul>\n\n<p>Para desarrollar esta pieza de software, lo más recomendable sería crear un wrapper alrededor de la API y exponer a las demás partes del programa sólo los métodos para poder realizar la tarea de traducción, abstrayendo completamente los detalles de cómo se realiza. De esta manera podrías cambiar de API fácilmente (implementando las llamadas a la nueva API) sin irrumpir en la mayoría del programa.</p>\n\n<p>Además esta forma de hacerlo también sería compatible con el siguiente método:</p>\n\n<ul>\n  <li><strong>AutoML Translation</strong>. Pertenece también a GCP y permite entrenar un modelo mediante el envío de pares de frases para entrenar un modelo que posteriormente puedes usar para hacer traducciones sobre un dominio específico. Es el que más trabajo implicaría de tu parte pero es el que más flexibilidad de tiene.</li>\n</ul>\n\n<h3 id=\"ventajas\">Ventajas</h3>\n\n<p>Puedes olvidarte completamente de los detalles de implementación de la traducción, del hosting y mantenimiento de esta parte y probablemente las traducciones son muy precisas, como estamos acostumbrados a las de Google.</p>\n\n<h3 id=\"desventajas\">Desventajas</h3>\n\n<p>Generalmente esta comodidad viene un costo económico que varía dependiendo del uso. La flexibilidad y capacidad de configuración de las API’s es variada y si no funciona como esperas es muy probable que no puedas hacer nada por mejorar la traducción.</p>\n\n<h2 id=\"modelo-pre-entrenado-de-aprendizaje-de-máquina\">Modelo pre-entrenado de Aprendizaje de Máquina</h2>\n\n<p>Los modelos de Aprendizaje Profundo que se han desarrollado de manera importante en los últimos años han sustituido los modelos previos que utilizaban el conocimiento de lingüistas y décadas de investigación estadística.</p>\n\n<p>Una peculiaridad de un modelo de Aprendizaje Profundo es que logra detectar patrones de uso de los lenguajes y utilizar dichos patrones para realizar la traducción de uno a otro. Dichos patrones no tienen una representación equivalente de una palabra en un idioma a otra en un idioma distinto, sino que combinan los patrones internos de uso de las palabras en un idioma y después aplican los patrones que el otro idioma utilizaría. Eso hace que los traductores que utilizan aprendizaje profundo sean mucho más precisos y que las traducciones sean mucho más naturales, además de que pueden adaptarse a casos de uso específicos que los modelos anteriores no contemplaban. ¿Por qué? Porque podemos entrenarlos utilizando un conjunto de datos de entrenamiento que se enfoquen en un dominio específico del lenguaje (ej. traducción de subtítulos de películas, o traducción de textos técnicos).</p>\n\n<p>A pesar de ello, uno de los impedimentos más relevantes para su entrenamiento es que hasta hace algunos años, entrenar un modelo requería grandes cantidades de cómputo y memoria, cosa que ha ido cambiando conforme la industria ha ido evolucionando y los principales proveedores de cómputo han puesto a disposición del mundo, plataformas en la nube donde puede adquirirse poder computacional y de procesamiento de manera sencilla (AWS, Google, Microsoft, IBM, Oracle, etc.). De igual forma, las compañías que crean procesadores especializados (NVIDIA, AMD) también han logrado reducir los costos y poner en manos de cada vez más desarrolladores, tarjetas de video con Unidades de Procesamiento Gráfico (GPUs) a precios cada vez más accesibles.</p>\n\n<p>El modelo genérico de un sistema de traducción basado en Aprendizaje de Máquina consta de dos piezas principales (cada una de ellas una red neuronal por sí misma):</p>\n\n<ol>\n  <li>\n    <p>Un  codificador de secuencias de palabras (que serían oraciones del texto) que aprende a codificar palabras como un arreglo de números que representa el significado de la oración.</p>\n  </li>\n  <li>\n    <p>Un decodificador de números, que toma un arreglo de números en general y los transforma en oraciones.</p>\n  </li>\n</ol>\n\n<p>La peculiaridad es que en el paso 1 obtenemos ese arreglo de números utilizando el lenguaje de orígen y la decodificación la hacemos hacia el lenguaje destino.</p>\n\n<p>Para poder capturar los patrones y relaciones que existen entre las palabras en una oración, es necesario que la red neuronal cuente con la capacidad de recordar las palabras dentro de una oración, ya que las relaciones de una palabra cualquiera serán mucho más fuertes con ciertas palabras que con otras, por ejemplo la relación entre “la” y “relación” será mucho más fuerte que “él” y “relación”, no esperaríamos poder encontrar un texto donde “él” y “relación” estén presentes en dicho orden específico.</p>\n\n<p>Esta capacidad de “recordar” de una red neuronal no existe en una red neuronal tradicional, donde las entradas pasan y son procesadas por todas las capas de la red sin hacer referencia a las palabras que pasaron antes o las palabras que pasaron después, por ello es que estos algoritmos utilizan un tipo de red neuronal llamado recurrente donde la última entrada influye en la siguiente predicción, esto permite a la red neuronal recurrente “aprender” el “significado” de cada palabra dentro de un contexto.</p>\n\n<p>En tiempos recientes, se han mejorado los modelos de procesamiento del “significado” de las palabras dentro de un contexto utilizando Transformadores que van incluso más allá del simple contexto de una palabra dentro de una oración, modelando las relaciones cruzadas entre cualquier palabra (previa o posterior) en vez de considerar únicamente el orden.</p>\n\n<p>Estos modelos requieren mucho más operaciones matemáticas durante su entrenamiento pero los patrones que pueden identificar las hacen mucho más poderosas, aún así los modelos de recurrentes arrojan resultados bastante aceptables.</p>\n\n<p>Existen casos en particular donde no es necesario entrenar tu propia red neuronal recurrente, ya que es probable que alguien más lo haya hecho ya. Esto puede ahorrarte muchas horas de procesamiento de información y el entrenamiento y validación del proceso de entrenamiento.</p>\n\n<p>El proceso que se sigue es:</p>\n\n<ol>\n  <li>Obtener un corpus o conjunto de datos sobre el problema que quieres resolver (por ejemplo, textos en el idioma de origen y en el idioma destino.</li>\n  <li>Limpieza y normalización de este corpus que remueva errores o piezas de los textos que sean incompletas o por ejemplo se puede decidir utilizar todas las palabras en minúsculas, separar las oraciones por ciertos símbolos de puntuación, etc. estas decisiones deberán tomarse teniendo en cuenta los objetivos para los cuales utilizaremos nuestro modelo de traducción, no es lo mismo un traductor de textos formateados de manera regular a textos que por ejemplo se vayan a utilizar como subtítulos para películas. Los pasos que normalmente se utilizarán tendrán como mínimo, código para separar las oraciones, y normalizar el texto.</li>\n</ol>\n\n<h3 id=\"utilizando-un-modelo-de-traducción-prefabricado\">Utilizando un modelo de traducción prefabricado</h3>\n\n<p>Si quieres experimentar con este tipo de modelos te recomiendo empezar por el uso de un modelo pre-entrenado y dependiendo de los resultados evaluar si es necesario entrenar uno especializado en la tarea que estás buscando resolver.</p>\n\n<p>Aunque hay varios modelos disponibles, te dejo la liga a un framework hecho en C++ y que tiene un número mínimo de dependencias, se llama <a href=\"https://marian-nmt.github.io/quickstart/\">Marian Neural Machine Translation</a> y como parte de sus peculiaridades es que es eficiente, puede utilizar varios procesadores gráficos para el entrenamiento y soporta el uso de CPU o GPU para la traducción (al poder utilizar sólo CPU hace que el modelo pueda utilizarse en computadoras que no tienen tantos recursos).</p>\n\n<p>Y aquí hay un modelo pre-entrenado que puede utilizarse para traducciones de español a inglés: <a href=\"https://github.com/ageitgey/spanish-to-english-translation\">Spanish to English Translation</a></p>\n\n<p>Si tuvieras necesidad de entrenar la red neuronal sería necesario que tuvieras datos paralelos, es decir el mismo texto en los dos idiomas entre los cuales quieres hacer la traducción. Aquí te dejamos la liga a uno de ellos: <a href=\"http://opus.nlpl.eu/\">The open parallel corpus</a></p>\n\n<h3 id=\"ventajas-1\">Ventajas</h3>\n\n<ul>\n  <li>Puede adaptarse mediante el entrenamiento, a un estilo o tipo específico de textos (textos científicos, técnicos, informales, subtítulos, etc.)</li>\n  <li>Puede utilizarse en modo “offline” sin necesidad de estar conectado a alguna fuente externa de internet.</li>\n  <li>No tiene costos o límites de uso, más que aquellos resultado de operar el modelo una vez entrenado (y de entrenarlo si fuera necesario hacerlo).</li>\n</ul>\n\n<h3 id=\"desventajas-1\">Desventajas</h3>\n\n<ul>\n  <li>Entrenarlo requiere una gran cantidad de datos y un proceso de limpieza/normalización que no son técnicamente sencillos.</li>\n  <li>Es probable que no sea sencillo alcanzar el nivel de entrenamiento que las grandes compañías han utilizado para entrenar sus propios modelos (porque seguramente tienen fuentes bastante grandes de datos/procesadores gráficos/etc).</li>\n  <li>Escalarlo para su uso masivo puede ser todo un reto.</li>\n  <li>Las redes neuronales son cajas negras por lo que si se detecta algún error en la traducción normalmente será muy difícil saber en qué parte de los datos de entrenamiento se introdujo el error y por lo tanto será difícil removerlo.</li>\n</ul>\n\n<p>En el siguiente artículo te contaremos cómo nos fue con las pruebas.</p>\n",
      "date_published": "Sun, 19 Jul 2020 00:00:00 -0500"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/07/16/de-bash-a-zsh.html",
      "url": "https://blog.thedojo.mx/2020/07/16/de-bash-a-zsh.html",
      "title": "De Bash a Zsh",
      "content_html": "<p>Con la reciente liberación de MacOS Catalina, Apple anunció que entre alguno de los cambios al sistema operativo, se utilizará a partir de esta versión un nuevo <em>shell</em> que de manera regular se utilizaba en la app Terminal y en otras aplicaciones utilizadas por los desarrolladores para interactuar con la Mac a través de la línea de comandos.</p>\n\n<p>El shell que se utilizaba previo a esta versión era <strong>Bash</strong> (<em>Bourne Again Shell</em>) y el que se utilizará ahora es <strong>Zsh</strong>.</p>\n\n<h2 id=\"qué-es-un-shell\">¿Qué es un shell?</h2>\n\n<p>En resumen, un shell es un programa que permite <strong>controlar la computadora a través de comandos de texto</strong>, normalmente se trata de interfaces de texto interactivo, donde el usuario podrá ir <strong>tecleando comandos para obtener información</strong> o ejecutar comandos y obtener resultados a través de la misma interfaz.</p>\n\n<p>A lo largo de la historia se han creado diferentes shells, cada uno con una serie de comandos que ponen a disposición de los usuarios <strong>funcionalidades específicas</strong> de sus sistemas operativos. ¿Y porqué estaría alguien interesado en usar un shell y una línea de comandos para controlar una computadora? Para entenderlo hay que viajar un poco en el tiempo.</p>\n\n<h3 id=\"historia\">Historia</h3>\n\n<p>Inicialmente, controlar una computadora era una tarea difícil, las primeras de ellas se controlaban mediante diferentes dispositivos (interruptores, tarjetas perforadas, etc.) que “cargaban” en memoria las distintas piezas de información que serían procesados en forma de programas. Este proceso era regularmente <strong>tedioso y sujeto a errores</strong>.</p>\n\n<p>En algunos casos, el primer programa que se cargaba en memoria era un programa que permitía cargar instrucciones adicionales a través de la lectura de datos en las mismas tarjetas perforadas. De igual forma, los resultados de la ejecución normalmente se plasmaban en papel o tarjetas similares a las que se utilizaban para su carga.</p>\n\n<p>Conforme fueron evolucionando los computadores, los programas permitieron el uso de dispositivos de entrada más amigables para el usuario de la computadora, como Teletipos, que permitían enviar comandos desde teclados y terminales remotas al ordenador (remoto en un sentido práctico, quizás de un cuarto a otro). Esta forma de transmitir comandos y obtener resultados era mucho más sencilla que estar cargando información a través de interruptores o tarjetas perforadas.</p>\n\n<p>La pregunta natural es: si esto fue la primer evolución hacia un uso más sencillo de las computadoras, <strong>¿por qué se sigue utilizando?</strong></p>\n\n<p>Aunque la evolución de las computadoras ha seguido su curso y la interacción Humano-Computador ha avanzado en diferentes vertientes, por ejemplo, <strong>mediante la implementación de interfaces gráficas</strong>, el uso de la interfaz de línea de comandos se ha mantenido vigente por diversas razones:</p>\n\n<ol>\n  <li>\n    <p>Por su <strong>versatilidad</strong>, es posible utilizarlo para resolver distintos tipos de problemas y con distintos tipos de opciones que harían muy difícil su integración completa en una interfaz gráfica.</p>\n  </li>\n  <li>\n    <p>Por su <strong>poder</strong>, al tener acceso a las funciones centrales del sistema operativo, también contempla casos de uso para los cuales las interfaces gráficas no están preparados.</p>\n  </li>\n  <li>\n    <p>Permite crear programas que hacen uso de las capacidades nativas y extendidas del sistema operativo y ejecutar dichos programas o scripts en distintas modalidades, por ejemplo, de manera repetitiva a través de trabajos programados (cron jobs) o en conjunto con otros programas (por ejemplo con ambientes de desarrollo integrados). A esto le podemos llamar <strong>automatización de tareas</strong>.</p>\n  </li>\n</ol>\n\n<p>El programa de shell específico (en este caso Bash o Zsh), definen su interfaz con el usuario, no sólo en la manera en la que presentarán la linea de comando sino también en las <strong>capacidades y comandos que soportan de manera nativa</strong>, en general, podemos encontrar algunas de estas características:</p>\n\n<ul>\n  <li>Una sintaxis que define los comandos y secuencias de comando que el shell ‘entenderá’.</li>\n  <li>Comandos que darán acceso a las ‘operaciones’ que el shell puede ejecutar .</li>\n  <li>Funciones que permiten agrupar comandos para ejecutar labores más complejas.</li>\n  <li>Parámetros para almacenar valores para su uso durante la ejecución de las funciones y comandos.</li>\n  <li>Expansión que define la forma en la que los parámetros en un comando son aplicados.</li>\n  <li>Flujo y redirección que controla las entradas y salidas de y desde los comandos.</li>\n  <li>Ejecución que define lo que sucede cuando cada comando corre.</li>\n  <li>Scripting que permite ejecutar archivos que contienen una lista de comandos y/o funciones.</li>\n</ul>\n\n<h2 id=\"porqué-razón-puede-estar-cambiando-apple-de-un-shell-a-otro\">¿Porqué razón puede estar cambiando Apple de un shell a otro?</h2>\n\n<p>Existen varias posibilidades, la primera de ellas es que aunque Apple utiliza Bash desde OSX Jaguar, no había actualizado Bash desde la versión 3.2 liberada en el 2007, es decir casi el mismo año en el que se liberó el primer iPhone. Es probable que una de las razones por las que esto sucedió fue que Bash cambió su licencia de uso de <strong>GNU GPL 2 a una licencia GNU GPLv3</strong>, y dicho cambio incluía restricciones que quizás no fueron del todo favorables a Apple.</p>\n\n<p>Así que migrar a Zsh es una opción refrescante. La versión que está incluida en Catalina es la 5.7.1 y utiliza una versión de licenciamiento <strong>MIT que es menos restrictiva que la GPLv3</strong>.</p>\n\n<h2 id=\"qué-sucederá-con-bash-tendré-que-dejar-de-usarlo\">¿Qué sucederá con Bash, tendré que dejar de usarlo?</h2>\n\n<p>No necesariamente, aunque Zsh será el shell por default para todas las nuevas cuentas de usuario creadas en macOS Catalina, si tu hiciste un upgrade del Sistema Operativo, tu cuenta seguirá utilizando por default Bash. Pero siempre tendrás opción de configurar el shell que desees por default de manera voluntaria, incluso a alguno distinto a Zsh o Bash.</p>\n\n<p>A nivel general, Bash y Zsh tienen un nivel de compatibilidad bastante alto ya que <strong>ambos están basados en el aún más antiguo Bourne Shell</strong>, de tal forma que la mayoría de los scripts y comandos existentes funcionarán sin ningún cambio en Zsh.</p>\n\n<p>La ventaja real de Zsh es la inclusión de funcionalidades que hacen trabajar con él más fácil (funcionalidades no incluidas por default en la versión vieja de Bash), entre algunas de mis funcionalidades favoritas están:</p>\n\n<ul>\n  <li>Auto completado de comandos</li>\n  <li>Auto corrección de comandos</li>\n  <li>Integración con algunos sistemas de uso común para desarrolladores (git)</li>\n</ul>\n\n<h2 id=\"qué-sucederá-con-mis-scripts-hechos-en-bash\">¿Qué sucederá con mis scripts hechos en Bash?</h2>\n\n<p>En general, correrán de igual forma a como lo venían haciendo, sin embargo en casos muy peculiares podrías requerir modificarlos o simplemente agregar #!/bin/bash (<em>shebang</em>) para forzar a que el script utilice el shell de Bash que sigue incluyéndose en MacOS.</p>\n\n<p>Puedes usar temporalmente uno u otro shell simplemente invocando su nombre en la línea de comandos (<code class=\"language-plaintext highlighter-rouge\">zsh</code> o <code class=\"language-plaintext highlighter-rouge\">bash</code>).</p>\n\n<p>En la Mac, podrás configurar el shell default en las Preferencias del Sistema, en el panel de Usuarios y Grupos, podrás seleccionar la cuenta de un usuario y en las Opciones Avanzadas podrás seleccionar uno de los shells disponibles.</p>\n\n<h2 id=\"conclusión-y-referencias\">Conclusión y referencias</h2>\n\n<p>Dominar tu shell <strong>hará que tu trabajo diario sea más sencillo</strong> ya que podrás configurar funcionalidades que aumenten tus capacidades como desarrollador y en conjunto con el conocimiento a profundidad de tu interfaz de desarrollo, podrá hacerte mucho más eficiente al momento de administrar y ejecutar comandos que tengan que ver con tus proyectos.</p>\n\n<p>Algunos recursos que te ayudarán:</p>\n\n<ul>\n  <li>La <a href=\"http://zsh.sourceforge.net/\">documentación de Zsh</a></li>\n  <li>Configuración Zsh es mediante <a href=\"https://ohmyz.sh/\">Oh My Zsh</a></li>\n  <li>¿Donde se configuran las funcionalidades de Zsh? En <code class=\"language-plaintext highlighter-rouge\">~/.zshrc</code>.</li>\n  <li>¿Cómo  saber que shell estoy usando?</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">echo</span> <span class=\"nv\">$0</span>\n</code></pre></div></div>\n<p>o</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">echo</span> <span class=\"nv\">$SHELL</span>\n</code></pre></div></div>\n\n<ul>\n  <li>¿Cómo configurar Zsh como mi shell default?</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>chsh <span class=\"nt\">-s</span> /bin/zsh\n</code></pre></div></div>\n\n<ul>\n  <li>¿Cómo activar el autocomplete?</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>autoload <span class=\"nt\">-U</span> compinit <span class=\"o\">&amp;&amp;</span> compinit\n</code></pre></div></div>\n\n<ul>\n  <li>¿Cómo activar la extensión para git?</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>autoload <span class=\"nt\">-Uz</span> vcs_info\n</code></pre></div></div>\n\n<ul>\n  <li>¿Cómo configurar el cambio de directorio automático?\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>setopt autocd\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<h3 id=\"referencias\">Referencias</h3>\n\n<ul>\n  <li><a href=\"https://www.bash.academy/\">Bash academy</a></li>\n  <li><a href=\"https://news.ycombinator.com/item?id=10737639\">Discusión en YCombinator</a></li>\n  <li><a href=\"http://www.rayninfo.co.uk/tips/zshtips.html?LMCL=bNg6o6\">Zsh tips</a></li>\n  <li><a href=\"http://leahneukirchen.org/blog/archive/2008/02/10-zsh-tricks-you-may-not-know.html\">10 trucos de Zsh</a></li>\n  <li><a href=\"http://zsh.sourceforge.net/Guide/zshguide.html\">Zsh Guide</a></li>\n  <li><a href=\"http://www.tldp.org/LDP/abs/html/\">Advanced Bash-Scripting Guide</a></li>\n  <li><a href=\"http://matt.might.net/articles/bash-by-example/\">Bash by example</a></li>\n  <li>Libro: <a href=\"https://amzn.to/32phs95\">From Bash to Zsh</a></li>\n</ul>\n",
      "date_published": "Thu, 16 Jul 2020 00:00:00 -0500"
      },
    
    {
      "id": "https://blog.thedojo.mx/2020/07/15/recursos-para-aprender-arquitectura-de-software.html",
      "url": "https://blog.thedojo.mx/2020/07/15/recursos-para-aprender-arquitectura-de-software.html",
      "title": "Recursos para aprender Arquitectura de Software",
      "content_html": "<p>Tuvimos una plática con <a href=\"https://twitter.com/machinesareus\">Agustín Ramos</a> acerca de la arquitectura de software y lo que debes aprender para practicarla. Este pequeño artículo incluye nuestro resumen y las recomendaciones de Agustín.</p>\n\n<h2 id=\"qué-es-la-arquitectura-de-software\">¿Qué es la arquitectura de software?</h2>\n\n<p>La arquitectura del software incluye el <strong>diseño del sistema</strong> a alto nivel: la descomposición del sistema en módulos, la descripción de las responsabilidades de cada uno y sus relaciones.</p>\n\n<p>También incluye las prácticas y herramientas que permitirán que el proyecto cumpla con los <strong>atributos de calidad</strong> o requerimientos no funcionales.</p>\n\n<p>Todo lo anterior está basado en un análisis de las <em>funciones</em> y <em>atributos de calidad</em> del sistema.</p>\n\n<h1 id=\"el-proceso\">El proceso</h1>\n\n<p>En la plática tocamos 5 etapas del desarrollo de una arquitectura:</p>\n\n<ol>\n  <li>\n    <p><strong>Descubrimiento y definición de los atributos de calidad.</strong> Básicamente consiste en entender el problema, escuchar a todos los involucrados en el proyecto y definir los atributos del software que no están directamente relacionados con la funcionalidad, pero que debe de cumplir.</p>\n  </li>\n  <li>\n    <p><strong>Diseño del sistema.</strong> Generalmente te ayudarás de estilos de arquitectura y patrones de diseño para llegar a los objetivos funcionales y no funcionales.</p>\n  </li>\n  <li>\n    <p><strong>Validación del diseño.</strong> Mediante la creación de prototipos se puede validar que las asunciones principales acerca del diseño y su relación con los atributos de calidad se cumplen. Esto puede derivar en <em>cambios</em> sobre el diseño que lo mejoren.</p>\n  </li>\n  <li>\n    <p><strong>Comunicación del diseño.</strong> Después de definir la arquitectura es importante comunicar el diseño al equipo mediante un exposición directa y la documentación. Esta documentación debe incluir la mayor información posible sobre la razón de las decisiones y la evolución de la arquitectura.</p>\n  </li>\n  <li>\n    <p><strong>Seguimiento del diseño.</strong> Esto incluye varias cosas:</p>\n    <ul>\n      <li><em>Verificación de que el equipo está siguiendo el diseño.</em> Esto se logra con revisiones constantes con el equipo: programación en parejas y revisión de código.</li>\n      <li><em>El diseño nunca está está escrito en piedra</em>. Después de las revisiones de código se descubrirán cosas que no están funcionando como se esperaba, por lo que será necesario modificar el diseño y dejar registro de los cambios y las decisiones tomadas.</li>\n    </ul>\n  </li>\n</ol>\n\n<h2 id=\"consejos-específicos\">Consejos específicos</h2>\n\n<p>Los arquitectos de software deben encontrar la solución más simple posible porque si no va a ser rígida.</p>\n\n<p>Acerca de la <strong>documentación</strong>, Agustín recomienda, exponerla al equipo en una junta y hacer un video de esto, que se le pase a cada integrante del equipo. Se puede seguir el marco llamado <a href=\"https://www.cs.ubc.ca/~gregor/teaching/papers/4+1view-architecture.pdf\">“Arquitectura 4 + 1”</a> que se compone de:</p>\n\n<ul>\n  <li>Vista de Componentes</li>\n  <li>Vista de Desarrollo</li>\n  <li>Vista de Procesos</li>\n  <li>Vista Física</li>\n  <li>Vista de Casos (Este es el +1)</li>\n</ul>\n\n<p>Además, tenemos que mantener una bitácora de los cambios y los factores que los impulsaron, esto puede ser mediante los <a href=\"https://adr.github.io/\">Architectural Decision Records</a>.</p>\n\n<h2 id=\"cómo-empezar\">Cómo empezar</h2>\n\n<p>Agustín nos recomendó algunos recursos para que empieces a aprender:</p>\n\n<ul>\n  <li><a href=\"https://www.goodreads.com/book/show/179204.Object_Design?from_search=true&amp;from_srp=true&amp;qid=3yFmpRp03n&amp;rank=6\">Object Design - Rebecca Wirfs-Brock</a></li>\n  <li><a href=\"https://www.goodreads.com/book/show/70143.Software_Architecture_in_Practice?from_search=true&amp;from_srp=true&amp;qid=mnXRSoVML7&amp;rank=1\">Software Architecture in Practice</a></li>\n  <li>Como alternativa al libro anterior  se recomienda Technical Report sobre arquitectura del Software Engineering Institute, encontré varios, tienes un ejemplo <a href=\"https://pure.au.dk/portal/files/20484966/tech-report-5.pdf\">aquí</a>.</li>\n  <li><a href=\"https://pragprog.com/titles/mkdsa/\">Design it! - Micheal Keeling</a></li>\n  <li>La serie <a href=\"\">Pattern-orinted Software Architecture</a></li>\n</ul>\n\n<p>Para aprender patrones de diseño se habló de los siguientes libros:</p>\n\n<ul>\n  <li><a href=\"https://www.amazon.com.mx/dp/0201633612?tag=amz-mkt-chr-mx-20&amp;ascsubtag=1ba00-01000-a0087-mac00-other-nomod-mx000-pcomp-feature-scomp-wm-5&amp;ref=aa_scomp\">Patrones de Diseño - Erich Gamma, et Al.</a></li>\n  <li><a href=\"https://www.amazon.com/Patterns-Handbook-Techniques-Strategies-Applications/dp/0521648181\">The patterns handbook</a></li>\n  <li>La serie <a href=\"https://www.amazon.com.mx/Pattern-Languages-Program-Design-Coplien/dp/0201607344/ref=sr_1_3?dchild=1&amp;keywords=Pattern+Languages+of+Program+Design&amp;qid=1594823984&amp;s=books&amp;sr=1-3\">Pattern language of program design (5 libros)</a></li>\n</ul>\n\n<p>Y entre los libros que se mencionan como la fuente de las ideas de patrones y diseño:</p>\n\n<ul>\n  <li><a href=\"https://www.amazon.com.mx/Phenomenon-Life-Building-Nature-Universe/dp/0972652914/ref=pd_sim_14_1/132-2199838-9714154?_encoding=UTF8&amp;pd_rd_i=0972652914&amp;pd_rd_r=43c91cc2-6447-4629-a6d7-fb29dc8fd2d7&amp;pd_rd_w=gNuac&amp;pd_rd_wg=g8gOe&amp;pf_rd_p=a62f455d-612d-4136-9fd7-44067fe2cd11&amp;pf_rd_r=86FX03JZ655BENFVMSC0&amp;psc=1&amp;refRID=86FX03JZ655BENFVMSC0\">The nature of order de Christopher Alexander</a> y los otros libros de él como <a href=\"https://www.amazon.com.mx/Professor-Department-Architecture-Christopher-Alexander/dp/0195024028/ref=pd_sim_14_3/132-2199838-9714154?_encoding=UTF8&amp;pd_rd_i=0195024028&amp;pd_rd_r=c4dd6dad-be5f-4a11-a037-a4ecd8f56915&amp;pd_rd_w=CYjKZ&amp;pd_rd_wg=x61DA&amp;pf_rd_p=a62f455d-612d-4136-9fd7-44067fe2cd11&amp;pf_rd_r=JWAJ48WRNHYPDZ8RC2R1&amp;psc=1&amp;refRID=JWAJ48WRNHYPDZ8RC2R1\">A timeless way of building</a></li>\n  <li><a href=\"https://www.amazon.com.mx/Art-Scalability-Architecture-Organizations-Enterprise/dp/0134032802/ref=sr_1_1?__mk_es_MX=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;dchild=1&amp;keywords=the+art+of+scalability&amp;qid=1594824264&amp;s=books&amp;sr=1-1\">The art of Scalability</a></li>\n</ul>\n\n<h2 id=\"el-capítulo\">El capítulo</h2>\n\n<p>De todos modos no te pierdas el capítulo, que estuvo muy bueno:</p>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/vfu5PsSH7us\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n\n",
      "date_published": "Wed, 15 Jul 2020 00:00:00 -0500"
      }
    
  ]
}
        
      </section>

      <footer class="page__meta">
        
        


        

      </footer>

      

      
    </div>

    
  </article>

  
  
</div>

    </div>

    
      <div class="search-content">
        <div class="search-content__inner-wrap"><form class="search-content__form" onkeydown="return event.key != 'Enter';">
    <label class="sr-only" for="search">
      Enter your search term...
    </label>
    <input type="search" id="search" class="search-input" tabindex="-1" placeholder="Enter your search term..." />
  </form>
  <div id="results" class="results"></div></div>

      </div>
    

    <div id="footer" class="page__footer">
      <footer>
        
<script src="https://f.convertkit.com/ckjs/ck.5.js"></script>
<div style="margin: 0 auto; ">
    <div style="margin: 0 auto">Suscríbete a nuestro newsletter</div>
    <form action="https://app.convertkit.com/forms/1792283/subscriptions"
        class="seva-form formkit-form" method="post" data-sv-form="1792283"
        data-uid="bc6708e046"
        data-format="inline"
        data-version="5"
        style="margin: 0 auto; "
        data-options="{&quot;settings&quot;:{&quot;after_subscribe&quot;:{&quot;action&quot;:&quot;message&quot;,&quot;success_message&quot;:&quot;Success! Now check your email to confirm your subscription.&quot;,&quot;redirect_url&quot;:&quot;&quot;},&quot;analytics&quot;:{&quot;google&quot;:null,&quot;facebook&quot;:null,&quot;segment&quot;:null,&quot;pinterest&quot;:null},&quot;modal&quot;:{&quot;trigger&quot;:&quot;timer&quot;,&quot;scroll_percentage&quot;:null,&quot;timer&quot;:5,&quot;devices&quot;:&quot;all&quot;,&quot;show_once_every&quot;:15},&quot;powered_by&quot;:{&quot;show&quot;:true,&quot;url&quot;:&quot;https://convertkit.com?utm_source=dynamic&amp;utm_medium=referral&amp;utm_campaign=poweredby&amp;utm_content=form&quot;},&quot;recaptcha&quot;:{&quot;enabled&quot;:false},&quot;return_visitor&quot;:{&quot;action&quot;:&quot;show&quot;,&quot;custom_content&quot;:&quot;&quot;},&quot;slide_in&quot;:{&quot;display_in&quot;:&quot;bottom_right&quot;,&quot;trigger&quot;:&quot;timer&quot;,&quot;scroll_percentage&quot;:null,&quot;timer&quot;:5,&quot;devices&quot;:&quot;all&quot;,&quot;show_once_every&quot;:15},&quot;sticky_bar&quot;:{&quot;display_in&quot;:&quot;top&quot;,&quot;trigger&quot;:&quot;timer&quot;,&quot;scroll_percentage&quot;:null,&quot;timer&quot;:5,&quot;devices&quot;:&quot;all&quot;,&quot;show_once_every&quot;:15}},&quot;version&quot;:&quot;5&quot;}" min-width="400 500 600 700 800"><div data-style="clean"><ul class="formkit-alert formkit-alert-error" data-element="errors" data-group="alert"></ul><div data-element="fields" data-stacked="false" class="seva-fields formkit-fields"><div class="formkit-field"><input class="formkit-input" name="email_address" aria-label="Correo Electrónico" placeholder="Correo Electrónico" required="" type="email" style="color: rgb(85, 82, 82); border-color: rgb(227, 227, 227); border-radius: 4px; font-weight: 400;"></div><button data-element="submit" class="formkit-submit formkit-submit" style="color: rgb(255, 255, 255); background-color: rgb(204, 30, 38); border-radius: 4px; font-weight: 400;"><div class="formkit-spinner"><div></div><div></div><div></div></div><span class="">Suscribirme</span></button></div><div class="formkit-powered-by-convertkit-container"><a href="https://convertkit.com?utm_source=dynamic&amp;utm_medium=referral&amp;utm_campaign=poweredby&amp;utm_content=form" data-element="powered-by" class="formkit-powered-by-convertkit" data-variant="dark" target="_blank" rel="noopener noreferrer">Built with ConvertKit</a></div></div><style>.formkit-form[data-uid="bc6708e046"] *{box-sizing:border-box;}.formkit-form[data-uid="bc6708e046"]{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.formkit-form[data-uid="bc6708e046"] legend{border:none;font-size:inherit;margin-bottom:10px;padding:0;position:relative;display:table;}.formkit-form[data-uid="bc6708e046"] fieldset{border:0;padding:0.01em 0 0 0;margin:0;min-width:0;}.formkit-form[data-uid="bc6708e046"] body:not(:-moz-handler-blocked) fieldset{display:table-cell;}.formkit-form[data-uid="bc6708e046"] h1,.formkit-form[data-uid="bc6708e046"] h2,.formkit-form[data-uid="bc6708e046"] h3,.formkit-form[data-uid="bc6708e046"] h4,.formkit-form[data-uid="bc6708e046"] h5,.formkit-form[data-uid="bc6708e046"] h6{color:inherit;font-size:inherit;font-weight:inherit;}.formkit-form[data-uid="bc6708e046"] p{color:inherit;font-size:inherit;font-weight:inherit;}.formkit-form[data-uid="bc6708e046"] ol:not([template-default]),.formkit-form[data-uid="bc6708e046"] ul:not([template-default]),.formkit-form[data-uid="bc6708e046"] blockquote:not([template-default]){text-align:left;}.formkit-form[data-uid="bc6708e046"] p:not([template-default]),.formkit-form[data-uid="bc6708e046"] hr:not([template-default]),.formkit-form[data-uid="bc6708e046"] blockquote:not([template-default]),.formkit-form[data-uid="bc6708e046"] ol:not([template-default]),.formkit-form[data-uid="bc6708e046"] ul:not([template-default]){color:inherit;font-style:initial;}.formkit-form[data-uid="bc6708e046"] .ordered-list,.formkit-form[data-uid="bc6708e046"] .unordered-list{list-style-position:outside !important;padding-left:1em;}.formkit-form[data-uid="bc6708e046"] .list-item{padding-left:0;}.formkit-form[data-uid="bc6708e046"][data-format="modal"]{display:none;}.formkit-form[data-uid="bc6708e046"][data-format="slide in"]{display:none;}.formkit-form[data-uid="bc6708e046"][data-format="sticky bar"]{display:none;}.formkit-sticky-bar .formkit-form[data-uid="bc6708e046"][data-format="sticky bar"]{display:block;}.formkit-form[data-uid="bc6708e046"] .formkit-input,.formkit-form[data-uid="bc6708e046"] .formkit-select,.formkit-form[data-uid="bc6708e046"] .formkit-checkboxes{width:100%;}.formkit-form[data-uid="bc6708e046"] .formkit-button,.formkit-form[data-uid="bc6708e046"] .formkit-submit{border:0;border-radius:5px;color:#ffffff;cursor:pointer;display:inline-block;text-align:center;font-size:15px;font-weight:500;cursor:pointer;margin-bottom:15px;overflow:hidden;padding:0;position:relative;vertical-align:middle;}.formkit-form[data-uid="bc6708e046"] .formkit-button:hover,.formkit-form[data-uid="bc6708e046"] .formkit-submit:hover,.formkit-form[data-uid="bc6708e046"] .formkit-button:focus,.formkit-form[data-uid="bc6708e046"] .formkit-submit:focus{outline:none;}.formkit-form[data-uid="bc6708e046"] .formkit-button:hover > span,.formkit-form[data-uid="bc6708e046"] .formkit-submit:hover > span,.formkit-form[data-uid="bc6708e046"] .formkit-button:focus > span,.formkit-form[data-uid="bc6708e046"] .formkit-submit:focus > span{background-color:rgba(0,0,0,0.1);}.formkit-form[data-uid="bc6708e046"] .formkit-button > span,.formkit-form[data-uid="bc6708e046"] .formkit-submit > span{display:block;-webkit-transition:all 300ms ease-in-out;transition:all 300ms ease-in-out;padding:12px 24px;}.formkit-form[data-uid="bc6708e046"] .formkit-input{background:#ffffff;font-size:15px;padding:12px;border:1px solid #e3e3e3;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;line-height:1.4;margin:0;-webkit-transition:border-color ease-out 300ms;transition:border-color ease-out 300ms;}.formkit-form[data-uid="bc6708e046"] .formkit-input:focus{outline:none;border-color:#1677be;-webkit-transition:border-color ease 300ms;transition:border-color ease 300ms;}.formkit-form[data-uid="bc6708e046"] .formkit-input::-webkit-input-placeholder{color:inherit;opacity:0.8;}.formkit-form[data-uid="bc6708e046"] .formkit-input::-moz-placeholder{color:inherit;opacity:0.8;}.formkit-form[data-uid="bc6708e046"] .formkit-input:-ms-input-placeholder{color:inherit;opacity:0.8;}.formkit-form[data-uid="bc6708e046"] .formkit-input::placeholder{color:inherit;opacity:0.8;}.formkit-form[data-uid="bc6708e046"] [data-group="dropdown"]{position:relative;display:inline-block;width:100%;}.formkit-form[data-uid="bc6708e046"] [data-group="dropdown"]::before{content:"";top:calc(50% - 2.5px);right:10px;position:absolute;pointer-events:none;border-color:#4f4f4f transparent transparent transparent;border-style:solid;border-width:6px 6px 0 6px;height:0;width:0;z-index:999;}.formkit-form[data-uid="bc6708e046"] [data-group="dropdown"] select{height:auto;width:100%;cursor:pointer;color:#333333;line-height:1.4;margin-bottom:0;padding:0 6px;-webkit-appearance:none;-moz-appearance:none;appearance:none;font-size:15px;padding:12px;padding-right:25px;border:1px solid #e3e3e3;background:#ffffff;}.formkit-form[data-uid="bc6708e046"] [data-group="dropdown"] select:focus{outline:none;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"]{text-align:left;margin:0;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"]{margin-bottom:10px;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] *{cursor:pointer;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"]:last-of-type{margin-bottom:0;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] input[type="checkbox"]{display:none;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] input[type="checkbox"] + label::after{content:none;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] input[type="checkbox"]:checked + label::after{border-color:#ffffff;content:"";}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] input[type="checkbox"]:checked + label::before{background:#10bf7a;border-color:#10bf7a;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] label{position:relative;display:inline-block;padding-left:28px;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] label::before,.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] label::after{position:absolute;content:"";display:inline-block;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] label::before{height:16px;width:16px;border:1px solid #e3e3e3;background:#ffffff;left:0px;top:3px;}.formkit-form[data-uid="bc6708e046"] [data-group="checkboxes"] [data-group="checkbox"] label::after{height:4px;width:8px;border-left:2px solid #4d4d4d;border-bottom:2px solid #4d4d4d;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);left:4px;top:8px;}.formkit-form[data-uid="bc6708e046"] .formkit-alert{background:#f9fafb;border:1px solid #e3e3e3;border-radius:5px;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;list-style:none;margin:25px auto;padding:12px;text-align:center;width:100%;}.formkit-form[data-uid="bc6708e046"] .formkit-alert:empty{display:none;}.formkit-form[data-uid="bc6708e046"] .formkit-alert-success{background:#d3fbeb;border-color:#10bf7a;color:#0c905c;}.formkit-form[data-uid="bc6708e046"] .formkit-alert-error{background:#fde8e2;border-color:#f2643b;color:#ea4110;}.formkit-form[data-uid="bc6708e046"] .formkit-spinner{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:0px;width:0px;margin:0 auto;position:absolute;top:0;left:0;right:0;width:0px;overflow:hidden;text-align:center;-webkit-transition:all 300ms ease-in-out;transition:all 300ms ease-in-out;}.formkit-form[data-uid="bc6708e046"] .formkit-spinner > div{margin:auto;width:12px;height:12px;background-color:#fff;opacity:0.3;border-radius:100%;display:inline-block;-webkit-animation:formkit-bouncedelay-formkit-form-data-uid-bc6708e046- 1.4s infinite ease-in-out both;animation:formkit-bouncedelay-formkit-form-data-uid-bc6708e046- 1.4s infinite ease-in-out both;}.formkit-form[data-uid="bc6708e046"] .formkit-spinner > div:nth-child(1){-webkit-animation-delay:-0.32s;animation-delay:-0.32s;}.formkit-form[data-uid="bc6708e046"] .formkit-spinner > div:nth-child(2){-webkit-animation-delay:-0.16s;animation-delay:-0.16s;}.formkit-form[data-uid="bc6708e046"] .formkit-submit[data-active] .formkit-spinner{opacity:1;height:100%;width:50px;}.formkit-form[data-uid="bc6708e046"] .formkit-submit[data-active] .formkit-spinner ~ span{opacity:0;}.formkit-form[data-uid="bc6708e046"] .formkit-powered-by[data-active="false"]{opacity:0.35;}.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;z-index:5;margin:10px 0;position:relative;}.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit-container[data-active="false"]{opacity:0.35;}.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#ffffff;border:1px solid #dce1e5;border-radius:4px;color:#373f45;cursor:pointer;display:block;height:36px;margin:0 auto;opacity:0.95;padding:0;-webkit-text-decoration:none;text-decoration:none;text-indent:100%;-webkit-transition:ease-in-out all 200ms;transition:ease-in-out all 200ms;white-space:nowrap;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:190px;background-repeat:no-repeat;background-position:center;background-image:url("data:image/svg+xml;charset=utf8,%3Csvg width='162' height='20' viewBox='0 0 162 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M83.0561 15.2457C86.675 15.2457 89.4722 12.5154 89.4722 9.14749C89.4722 5.99211 86.8443 4.06563 85.1038 4.06563C82.6801 4.06563 80.7373 5.76407 80.4605 8.28551C80.4092 8.75244 80.0387 9.14403 79.5686 9.14069C78.7871 9.13509 77.6507 9.12841 76.9314 9.13092C76.6217 9.13199 76.3658 8.88106 76.381 8.57196C76.4895 6.38513 77.2218 4.3404 78.618 2.76974C80.1695 1.02445 82.4289 0 85.1038 0C89.5979 0 93.8406 4.07791 93.8406 9.14749C93.8406 14.7608 89.1832 19.3113 83.1517 19.3113C78.8502 19.3113 74.5179 16.5041 73.0053 12.5795C72.9999 12.565 72.9986 12.5492 73.0015 12.534C73.0218 12.4179 73.0617 12.3118 73.1011 12.2074C73.1583 12.0555 73.2143 11.907 73.2062 11.7359L73.18 11.1892C73.174 11.0569 73.2075 10.9258 73.2764 10.8127C73.3452 10.6995 73.4463 10.6094 73.5666 10.554L73.7852 10.4523C73.9077 10.3957 74.0148 10.3105 74.0976 10.204C74.1803 10.0974 74.2363 9.97252 74.2608 9.83983C74.3341 9.43894 74.6865 9.14749 75.0979 9.14749C75.7404 9.14749 76.299 9.57412 76.5088 10.1806C77.5188 13.1 79.1245 15.2457 83.0561 15.2457Z' fill='%23373F45'/%3E%3Cpath d='M155.758 6.91365C155.028 6.91365 154.804 6.47916 154.804 5.98857C154.804 5.46997 154.986 5.06348 155.758 5.06348C156.53 5.06348 156.712 5.46997 156.712 5.98857C156.712 6.47905 156.516 6.91365 155.758 6.91365ZM142.441 12.9304V9.32833L141.415 9.32323V8.90392C141.415 8.44719 141.786 8.07758 142.244 8.07986L142.441 8.08095V6.55306L144.082 6.09057V8.08073H145.569V8.50416C145.569 8.61242 145.548 8.71961 145.506 8.81961C145.465 8.91961 145.404 9.01047 145.328 9.08699C145.251 9.16351 145.16 9.2242 145.06 9.26559C144.96 9.30698 144.853 9.32826 144.745 9.32822H144.082V12.7201C144.082 13.2423 144.378 13.4256 144.76 13.4887C145.209 13.5629 145.583 13.888 145.583 14.343V14.9626C144.029 14.9626 142.441 14.8942 142.441 12.9304Z' fill='%23373F45'/%3E%3Cpath d='M110.058 7.92554C108.417 7.88344 106.396 8.92062 106.396 11.5137C106.396 14.0646 108.417 15.0738 110.058 15.0318C111.742 15.0738 113.748 14.0646 113.748 11.5137C113.748 8.92062 111.742 7.88344 110.058 7.92554ZM110.07 13.7586C108.878 13.7586 108.032 12.8905 108.032 11.461C108.032 10.1013 108.878 9.20569 110.071 9.20569C111.263 9.20569 112.101 10.0995 112.101 11.459C112.101 12.8887 111.263 13.7586 110.07 13.7586Z' fill='%23373F45'/%3E%3Cpath d='M118.06 7.94098C119.491 7.94098 120.978 8.33337 120.978 11.1366V14.893H120.063C119.608 14.893 119.238 14.524 119.238 14.0689V10.9965C119.238 9.66506 118.747 9.16047 117.891 9.16047C117.414 9.16047 116.797 9.52486 116.502 9.81915V14.069C116.502 14.1773 116.481 14.2845 116.44 14.3845C116.398 14.4845 116.337 14.5753 116.261 14.6519C116.184 14.7284 116.093 14.7891 115.993 14.8305C115.893 14.8719 115.786 14.8931 115.678 14.8931H114.847V8.10918H115.773C115.932 8.10914 116.087 8.16315 116.212 8.26242C116.337 8.36168 116.424 8.50033 116.46 8.65577C116.881 8.19328 117.428 7.94098 118.06 7.94098ZM122.854 8.09713C123.024 8.09708 123.19 8.1496 123.329 8.2475C123.468 8.34541 123.574 8.48391 123.631 8.64405L125.133 12.8486L126.635 8.64415C126.692 8.48402 126.798 8.34551 126.937 8.2476C127.076 8.1497 127.242 8.09718 127.412 8.09724H128.598L126.152 14.3567C126.091 14.5112 125.986 14.6439 125.849 14.7374C125.711 14.831 125.549 14.881 125.383 14.8809H124.333L121.668 8.09713H122.854Z' fill='%23373F45'/%3E%3Cpath d='M135.085 14.5514C134.566 14.7616 133.513 15.0416 132.418 15.0416C130.496 15.0416 129.024 13.9345 129.024 11.4396C129.024 9.19701 130.451 7.99792 132.191 7.99792C134.338 7.99792 135.254 9.4378 135.158 11.3979C135.139 11.8029 134.786 12.0983 134.38 12.0983H130.679C130.763 13.1916 131.562 13.7662 132.615 13.7662C133.028 13.7662 133.462 13.7452 133.983 13.6481C134.535 13.545 135.085 13.9375 135.085 14.4985V14.5514ZM133.673 10.949C133.785 9.87621 133.061 9.28752 132.191 9.28752C131.321 9.28752 130.734 9.93979 130.679 10.9489L133.673 10.949Z' fill='%23373F45'/%3E%3Cpath d='M137.345 8.11122C137.497 8.11118 137.645 8.16229 137.765 8.25635C137.884 8.35041 137.969 8.48197 138.005 8.62993C138.566 8.20932 139.268 7.94303 139.759 7.94303C139.801 7.94303 140.068 7.94303 140.489 7.99913V8.7265C140.489 9.11748 140.15 9.4147 139.759 9.4147C139.31 9.4147 138.651 9.5829 138.131 9.8773V14.8951H136.462V8.11112L137.345 8.11122ZM156.6 14.0508V8.09104H155.769C155.314 8.09104 154.944 8.45999 154.944 8.9151V14.8748H155.775C156.23 14.8748 156.6 14.5058 156.6 14.0508ZM158.857 12.9447V9.34254H157.749V8.91912C157.749 8.46401 158.118 8.09506 158.574 8.09506H158.857V6.56739L160.499 6.10479V8.09506H161.986V8.51848C161.986 8.97359 161.617 9.34254 161.161 9.34254H160.499V12.7345C160.499 13.2566 160.795 13.44 161.177 13.503C161.626 13.5774 162 13.9024 162 14.3574V14.977C160.446 14.977 158.857 14.9086 158.857 12.9447ZM98.1929 10.1124C98.2033 6.94046 100.598 5.16809 102.895 5.16809C104.171 5.16809 105.342 5.44285 106.304 6.12953L105.914 6.6631C105.654 7.02011 105.16 7.16194 104.749 6.99949C104.169 6.7702 103.622 6.7218 103.215 6.7218C101.335 6.7218 99.9169 7.92849 99.9068 10.1123C99.9169 12.2959 101.335 13.5201 103.215 13.5201C103.622 13.5201 104.169 13.4717 104.749 13.2424C105.16 13.0799 105.654 13.2046 105.914 13.5615L106.304 14.0952C105.342 14.7819 104.171 15.0566 102.895 15.0566C100.598 15.0566 98.2033 13.2842 98.1929 10.1124ZM147.619 5.21768C148.074 5.21768 148.444 5.58663 148.444 6.04174V9.81968L151.82 5.58131C151.897 5.47733 151.997 5.39282 152.112 5.3346C152.227 5.27638 152.355 5.24607 152.484 5.24611H153.984L150.166 10.0615L153.984 14.8749H152.484C152.355 14.8749 152.227 14.8446 152.112 14.7864C151.997 14.7281 151.897 14.6436 151.82 14.5397L148.444 10.3025V14.0508C148.444 14.5059 148.074 14.8749 147.619 14.8749H146.746V5.21768H147.619Z' fill='%23373F45'/%3E%3Cpath d='M0.773438 6.5752H2.68066C3.56543 6.5752 4.2041 6.7041 4.59668 6.96191C4.99219 7.21973 5.18994 7.62695 5.18994 8.18359C5.18994 8.55859 5.09326 8.87061 4.8999 9.11963C4.70654 9.36865 4.42822 9.52539 4.06494 9.58984V9.63379C4.51611 9.71875 4.84717 9.88721 5.05811 10.1392C5.27197 10.3882 5.37891 10.7266 5.37891 11.1543C5.37891 11.7314 5.17676 12.1841 4.77246 12.5122C4.37109 12.8374 3.81152 13 3.09375 13H0.773438V6.5752ZM1.82373 9.22949H2.83447C3.27393 9.22949 3.59473 9.16064 3.79688 9.02295C3.99902 8.88232 4.1001 8.64502 4.1001 8.31104C4.1001 8.00928 3.99023 7.79102 3.77051 7.65625C3.55371 7.52148 3.20801 7.4541 2.7334 7.4541H1.82373V9.22949ZM1.82373 10.082V12.1167H2.93994C3.37939 12.1167 3.71045 12.0332 3.93311 11.8662C4.15869 11.6963 4.27148 11.4297 4.27148 11.0664C4.27148 10.7324 4.15723 10.4849 3.92871 10.3237C3.7002 10.1626 3.35303 10.082 2.88721 10.082H1.82373Z' fill='%23373F45'/%3E%3Cpath d='M13.011 6.5752V10.7324C13.011 11.207 12.9084 11.623 12.7034 11.9805C12.5012 12.335 12.2068 12.6089 11.8201 12.8022C11.4363 12.9927 10.9763 13.0879 10.4402 13.0879C9.6433 13.0879 9.02368 12.877 8.5813 12.4551C8.13892 12.0332 7.91772 11.4531 7.91772 10.7148V6.5752H8.9724V10.6401C8.9724 11.1704 9.09546 11.5615 9.34155 11.8135C9.58765 12.0654 9.96557 12.1914 10.4753 12.1914C11.4656 12.1914 11.9607 11.6714 11.9607 10.6313V6.5752H13.011Z' fill='%23373F45'/%3E%3Cpath d='M15.9146 13V6.5752H16.9649V13H15.9146Z' fill='%23373F45'/%3E%3Cpath d='M19.9255 13V6.5752H20.9758V12.0991H23.696V13H19.9255Z' fill='%23373F45'/%3E%3Cpath d='M28.2828 13H27.2325V7.47607H25.3428V6.5752H30.1724V7.47607H28.2828V13Z' fill='%23373F45'/%3E%3Cpath d='M41.9472 13H40.8046L39.7148 9.16796C39.6679 9.00097 39.6093 8.76074 39.539 8.44727C39.4687 8.13086 39.4262 7.91113 39.4116 7.78809C39.3823 7.97559 39.3339 8.21875 39.2665 8.51758C39.2021 8.81641 39.1479 9.03905 39.1039 9.18554L38.0405 13H36.8979L36.0673 9.7832L35.2236 6.5752H36.2958L37.2143 10.3193C37.3578 10.9199 37.4604 11.4502 37.5219 11.9102C37.5541 11.6611 37.6025 11.3828 37.6669 11.0752C37.7314 10.7676 37.79 10.5186 37.8427 10.3281L38.8886 6.5752H39.9301L41.0024 10.3457C41.1049 10.6943 41.2133 11.2158 41.3276 11.9102C41.3715 11.4912 41.477 10.958 41.644 10.3105L42.558 6.5752H43.6215L41.9472 13Z' fill='%23373F45'/%3E%3Cpath d='M45.7957 13V6.5752H46.846V13H45.7957Z' fill='%23373F45'/%3E%3Cpath d='M52.0258 13H50.9755V7.47607H49.0859V6.5752H53.9155V7.47607H52.0258V13Z' fill='%23373F45'/%3E%3Cpath d='M61.2312 13H60.1765V10.104H57.2146V13H56.1643V6.5752H57.2146V9.20312H60.1765V6.5752H61.2312V13Z' fill='%23373F45'/%3E%3C/svg%3E");}.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit:hover,.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit:focus{background-color:#ffffff;-webkit-transform:scale(1.025) perspective(1px);-ms-transform:scale(1.025) perspective(1px);transform:scale(1.025) perspective(1px);opacity:1;}.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit[data-variant="dark"],.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit[data-variant="light"]{background-color:transparent;border-color:transparent;width:166px;}.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit[data-variant="light"]{color:#ffffff;background-image:url("data:image/svg+xml;charset=utf8,%3Csvg width='162' height='20' viewBox='0 0 162 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M83.0561 15.2457C86.675 15.2457 89.4722 12.5154 89.4722 9.14749C89.4722 5.99211 86.8443 4.06563 85.1038 4.06563C82.6801 4.06563 80.7373 5.76407 80.4605 8.28551C80.4092 8.75244 80.0387 9.14403 79.5686 9.14069C78.7871 9.13509 77.6507 9.12841 76.9314 9.13092C76.6217 9.13199 76.3658 8.88106 76.381 8.57196C76.4895 6.38513 77.2218 4.3404 78.618 2.76974C80.1695 1.02445 82.4289 0 85.1038 0C89.5979 0 93.8406 4.07791 93.8406 9.14749C93.8406 14.7608 89.1832 19.3113 83.1517 19.3113C78.8502 19.3113 74.5179 16.5041 73.0053 12.5795C72.9999 12.565 72.9986 12.5492 73.0015 12.534C73.0218 12.4179 73.0617 12.3118 73.1011 12.2074C73.1583 12.0555 73.2143 11.907 73.2062 11.7359L73.18 11.1892C73.174 11.0569 73.2075 10.9258 73.2764 10.8127C73.3452 10.6995 73.4463 10.6094 73.5666 10.554L73.7852 10.4523C73.9077 10.3957 74.0148 10.3105 74.0976 10.204C74.1803 10.0974 74.2363 9.97252 74.2608 9.83983C74.3341 9.43894 74.6865 9.14749 75.0979 9.14749C75.7404 9.14749 76.299 9.57412 76.5088 10.1806C77.5188 13.1 79.1245 15.2457 83.0561 15.2457Z' fill='white'/%3E%3Cpath d='M155.758 6.91365C155.028 6.91365 154.804 6.47916 154.804 5.98857C154.804 5.46997 154.986 5.06348 155.758 5.06348C156.53 5.06348 156.712 5.46997 156.712 5.98857C156.712 6.47905 156.516 6.91365 155.758 6.91365ZM142.441 12.9304V9.32833L141.415 9.32323V8.90392C141.415 8.44719 141.786 8.07758 142.244 8.07986L142.441 8.08095V6.55306L144.082 6.09057V8.08073H145.569V8.50416C145.569 8.61242 145.548 8.71961 145.506 8.81961C145.465 8.91961 145.404 9.01047 145.328 9.08699C145.251 9.16351 145.16 9.2242 145.06 9.26559C144.96 9.30698 144.853 9.32826 144.745 9.32822H144.082V12.7201C144.082 13.2423 144.378 13.4256 144.76 13.4887C145.209 13.5629 145.583 13.888 145.583 14.343V14.9626C144.029 14.9626 142.441 14.8942 142.441 12.9304Z' fill='white'/%3E%3Cpath d='M110.058 7.92554C108.417 7.88344 106.396 8.92062 106.396 11.5137C106.396 14.0646 108.417 15.0738 110.058 15.0318C111.742 15.0738 113.748 14.0646 113.748 11.5137C113.748 8.92062 111.742 7.88344 110.058 7.92554ZM110.07 13.7586C108.878 13.7586 108.032 12.8905 108.032 11.461C108.032 10.1013 108.878 9.20569 110.071 9.20569C111.263 9.20569 112.101 10.0995 112.101 11.459C112.101 12.8887 111.263 13.7586 110.07 13.7586Z' fill='white'/%3E%3Cpath d='M118.06 7.94098C119.491 7.94098 120.978 8.33337 120.978 11.1366V14.893H120.063C119.608 14.893 119.238 14.524 119.238 14.0689V10.9965C119.238 9.66506 118.747 9.16047 117.891 9.16047C117.414 9.16047 116.797 9.52486 116.502 9.81915V14.069C116.502 14.1773 116.481 14.2845 116.44 14.3845C116.398 14.4845 116.337 14.5753 116.261 14.6519C116.184 14.7284 116.093 14.7891 115.993 14.8305C115.893 14.8719 115.786 14.8931 115.678 14.8931H114.847V8.10918H115.773C115.932 8.10914 116.087 8.16315 116.212 8.26242C116.337 8.36168 116.424 8.50033 116.46 8.65577C116.881 8.19328 117.428 7.94098 118.06 7.94098ZM122.854 8.09713C123.024 8.09708 123.19 8.1496 123.329 8.2475C123.468 8.34541 123.574 8.48391 123.631 8.64405L125.133 12.8486L126.635 8.64415C126.692 8.48402 126.798 8.34551 126.937 8.2476C127.076 8.1497 127.242 8.09718 127.412 8.09724H128.598L126.152 14.3567C126.091 14.5112 125.986 14.6439 125.849 14.7374C125.711 14.831 125.549 14.881 125.383 14.8809H124.333L121.668 8.09713H122.854Z' fill='white'/%3E%3Cpath d='M135.085 14.5514C134.566 14.7616 133.513 15.0416 132.418 15.0416C130.496 15.0416 129.024 13.9345 129.024 11.4396C129.024 9.19701 130.451 7.99792 132.191 7.99792C134.338 7.99792 135.254 9.4378 135.158 11.3979C135.139 11.8029 134.786 12.0983 134.38 12.0983H130.679C130.763 13.1916 131.562 13.7662 132.615 13.7662C133.028 13.7662 133.462 13.7452 133.983 13.6481C134.535 13.545 135.085 13.9375 135.085 14.4985V14.5514ZM133.673 10.949C133.785 9.87621 133.061 9.28752 132.191 9.28752C131.321 9.28752 130.734 9.93979 130.679 10.9489L133.673 10.949Z' fill='white'/%3E%3Cpath d='M137.345 8.11122C137.497 8.11118 137.645 8.16229 137.765 8.25635C137.884 8.35041 137.969 8.48197 138.005 8.62993C138.566 8.20932 139.268 7.94303 139.759 7.94303C139.801 7.94303 140.068 7.94303 140.489 7.99913V8.7265C140.489 9.11748 140.15 9.4147 139.759 9.4147C139.31 9.4147 138.651 9.5829 138.131 9.8773V14.8951H136.462V8.11112L137.345 8.11122ZM156.6 14.0508V8.09104H155.769C155.314 8.09104 154.944 8.45999 154.944 8.9151V14.8748H155.775C156.23 14.8748 156.6 14.5058 156.6 14.0508ZM158.857 12.9447V9.34254H157.749V8.91912C157.749 8.46401 158.118 8.09506 158.574 8.09506H158.857V6.56739L160.499 6.10479V8.09506H161.986V8.51848C161.986 8.97359 161.617 9.34254 161.161 9.34254H160.499V12.7345C160.499 13.2566 160.795 13.44 161.177 13.503C161.626 13.5774 162 13.9024 162 14.3574V14.977C160.446 14.977 158.857 14.9086 158.857 12.9447ZM98.1929 10.1124C98.2033 6.94046 100.598 5.16809 102.895 5.16809C104.171 5.16809 105.342 5.44285 106.304 6.12953L105.914 6.6631C105.654 7.02011 105.16 7.16194 104.749 6.99949C104.169 6.7702 103.622 6.7218 103.215 6.7218C101.335 6.7218 99.9169 7.92849 99.9068 10.1123C99.9169 12.2959 101.335 13.5201 103.215 13.5201C103.622 13.5201 104.169 13.4717 104.749 13.2424C105.16 13.0799 105.654 13.2046 105.914 13.5615L106.304 14.0952C105.342 14.7819 104.171 15.0566 102.895 15.0566C100.598 15.0566 98.2033 13.2842 98.1929 10.1124ZM147.619 5.21768C148.074 5.21768 148.444 5.58663 148.444 6.04174V9.81968L151.82 5.58131C151.897 5.47733 151.997 5.39282 152.112 5.3346C152.227 5.27638 152.355 5.24607 152.484 5.24611H153.984L150.166 10.0615L153.984 14.8749H152.484C152.355 14.8749 152.227 14.8446 152.112 14.7864C151.997 14.7281 151.897 14.6436 151.82 14.5397L148.444 10.3025V14.0508C148.444 14.5059 148.074 14.8749 147.619 14.8749H146.746V5.21768H147.619Z' fill='white'/%3E%3Cpath d='M0.773438 6.5752H2.68066C3.56543 6.5752 4.2041 6.7041 4.59668 6.96191C4.99219 7.21973 5.18994 7.62695 5.18994 8.18359C5.18994 8.55859 5.09326 8.87061 4.8999 9.11963C4.70654 9.36865 4.42822 9.52539 4.06494 9.58984V9.63379C4.51611 9.71875 4.84717 9.88721 5.05811 10.1392C5.27197 10.3882 5.37891 10.7266 5.37891 11.1543C5.37891 11.7314 5.17676 12.1841 4.77246 12.5122C4.37109 12.8374 3.81152 13 3.09375 13H0.773438V6.5752ZM1.82373 9.22949H2.83447C3.27393 9.22949 3.59473 9.16064 3.79688 9.02295C3.99902 8.88232 4.1001 8.64502 4.1001 8.31104C4.1001 8.00928 3.99023 7.79102 3.77051 7.65625C3.55371 7.52148 3.20801 7.4541 2.7334 7.4541H1.82373V9.22949ZM1.82373 10.082V12.1167H2.93994C3.37939 12.1167 3.71045 12.0332 3.93311 11.8662C4.15869 11.6963 4.27148 11.4297 4.27148 11.0664C4.27148 10.7324 4.15723 10.4849 3.92871 10.3237C3.7002 10.1626 3.35303 10.082 2.88721 10.082H1.82373Z' fill='white'/%3E%3Cpath d='M13.011 6.5752V10.7324C13.011 11.207 12.9084 11.623 12.7034 11.9805C12.5012 12.335 12.2068 12.6089 11.8201 12.8022C11.4363 12.9927 10.9763 13.0879 10.4402 13.0879C9.6433 13.0879 9.02368 12.877 8.5813 12.4551C8.13892 12.0332 7.91772 11.4531 7.91772 10.7148V6.5752H8.9724V10.6401C8.9724 11.1704 9.09546 11.5615 9.34155 11.8135C9.58765 12.0654 9.96557 12.1914 10.4753 12.1914C11.4656 12.1914 11.9607 11.6714 11.9607 10.6313V6.5752H13.011Z' fill='white'/%3E%3Cpath d='M15.9146 13V6.5752H16.9649V13H15.9146Z' fill='white'/%3E%3Cpath d='M19.9255 13V6.5752H20.9758V12.0991H23.696V13H19.9255Z' fill='white'/%3E%3Cpath d='M28.2828 13H27.2325V7.47607H25.3428V6.5752H30.1724V7.47607H28.2828V13Z' fill='white'/%3E%3Cpath d='M41.9472 13H40.8046L39.7148 9.16796C39.6679 9.00097 39.6093 8.76074 39.539 8.44727C39.4687 8.13086 39.4262 7.91113 39.4116 7.78809C39.3823 7.97559 39.3339 8.21875 39.2665 8.51758C39.2021 8.81641 39.1479 9.03905 39.1039 9.18554L38.0405 13H36.8979L36.0673 9.7832L35.2236 6.5752H36.2958L37.2143 10.3193C37.3578 10.9199 37.4604 11.4502 37.5219 11.9102C37.5541 11.6611 37.6025 11.3828 37.6669 11.0752C37.7314 10.7676 37.79 10.5186 37.8427 10.3281L38.8886 6.5752H39.9301L41.0024 10.3457C41.1049 10.6943 41.2133 11.2158 41.3276 11.9102C41.3715 11.4912 41.477 10.958 41.644 10.3105L42.558 6.5752H43.6215L41.9472 13Z' fill='white'/%3E%3Cpath d='M45.7957 13V6.5752H46.846V13H45.7957Z' fill='white'/%3E%3Cpath d='M52.0258 13H50.9755V7.47607H49.0859V6.5752H53.9155V7.47607H52.0258V13Z' fill='white'/%3E%3Cpath d='M61.2312 13H60.1765V10.104H57.2146V13H56.1643V6.5752H57.2146V9.20312H60.1765V6.5752H61.2312V13Z' fill='white'/%3E%3C/svg%3E");}@-webkit-keyframes formkit-bouncedelay-formkit-form-data-uid-bc6708e046-{0%,80%,100%{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);}40%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);}}@keyframes formkit-bouncedelay-formkit-form-data-uid-bc6708e046-{0%,80%,100%{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);}40%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);}}.formkit-form[data-uid="bc6708e046"] blockquote{padding:10px 20px;margin:0 0 20px;border-left:5px solid #e1e1e1;} .formkit-form[data-uid="bc6708e046"]{max-width:700px;}.formkit-form[data-uid="bc6708e046"] [data-style="clean"]{width:100%;}.formkit-form[data-uid="bc6708e046"] .formkit-fields{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:0 auto;}.formkit-form[data-uid="bc6708e046"] .formkit-field,.formkit-form[data-uid="bc6708e046"] .formkit-submit{margin:0 0 15px 0;-webkit-flex:1 0 100%;-ms-flex:1 0 100%;flex:1 0 100%;}.formkit-form[data-uid="bc6708e046"] .formkit-powered-by-convertkit-container{margin:0;}.formkit-form[data-uid="bc6708e046"][min-width~="700"] [data-style="clean"],.formkit-form[data-uid="bc6708e046"][min-width~="800"] [data-style="clean"]{padding:10px;}.formkit-form[data-uid="bc6708e046"][min-width~="700"] .formkit-fields[data-stacked="false"],.formkit-form[data-uid="bc6708e046"][min-width~="800"] .formkit-fields[data-stacked="false"]{margin-left:-5px;margin-right:-5px;}.formkit-form[data-uid="bc6708e046"][min-width~="700"] .formkit-fields[data-stacked="false"] .formkit-field,.formkit-form[data-uid="bc6708e046"][min-width~="800"] .formkit-fields[data-stacked="false"] .formkit-field,.formkit-form[data-uid="bc6708e046"][min-width~="700"] .formkit-fields[data-stacked="false"] .formkit-submit,.formkit-form[data-uid="bc6708e046"][min-width~="800"] .formkit-fields[data-stacked="false"] .formkit-submit{margin:0 5px 15px 5px;}.formkit-form[data-uid="bc6708e046"][min-width~="700"] .formkit-fields[data-stacked="false"] .formkit-field,.formkit-form[data-uid="bc6708e046"][min-width~="800"] .formkit-fields[data-stacked="false"] .formkit-field{-webkit-flex:100 1 auto;-ms-flex:100 1 auto;flex:100 1 auto;}.formkit-form[data-uid="bc6708e046"][min-width~="700"] .formkit-fields[data-stacked="false"] .formkit-submit,.formkit-form[data-uid="bc6708e046"][min-width~="800"] .formkit-fields[data-stacked="false"] .formkit-submit{-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;} </style></form>
</div>
<!-- End Convertkit -->
<!-- <script type="text/javascript" src="/assets/jquery.scrolldepth.min.js"></script> -->

<script>
    var sharect = new Sharect();
    sharect.config({
    //   facebook: true,
      twitter: true,
      twitterUsername: '@thedojomx',
      backgroundColor: '#ff4081',
      iconColor: '#fff'
    }).init();

</script>

<script async data-uid="3362b65db9" src="https://thedojomx.ck.page/3362b65db9/index.js"></script>
        <div class="page__footer-follow">
  <ul class="social-icons">
    
      <li><strong>Seguir:</strong></li>
    

    

    <li><a href="/feed.xml"><i class="fas fa-fw fa-rss-square" aria-hidden="true"></i> Feed</a></li>
  </ul>
</div>

<div class="page__footer-copyright">&copy; 2020 . Powered by <a href="https://jekyllrb.com" rel="nofollow">Jekyll</a> &amp; <a href="https://mademistakes.com/work/minimal-mistakes-jekyll-theme/" rel="nofollow">Minimal Mistakes</a>.</div>

      </footer>
    </div>

    
  <script src="/assets/js/main.min.js"></script>




<script src="/assets/js/lunr/lunr.min.js"></script>
<script src="/assets/js/lunr/lunr-store.js"></script>
<script src="/assets/js/lunr/lunr-en.js"></script>




  <script>
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-127437335-2']);
  
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>









  </body>
</html>
